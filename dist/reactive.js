!function(t,Q){"object"==typeof exports&&"object"==typeof module?module.exports=Q():"function"==typeof define&&define.amd?define([],Q):"object"==typeof exports?exports.Reactive=Q():t.Reactive=Q()}(window,(function(){return function(t){var Q={};function F(B){if(Q[B])return Q[B].exports;var U=Q[B]={i:B,l:!1,exports:{}};return t[B].call(U.exports,U,U.exports,F),U.l=!0,U.exports}return F.m=t,F.c=Q,F.d=function(t,Q,B){F.o(t,Q)||Object.defineProperty(t,Q,{enumerable:!0,get:B})},F.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},F.t=function(t,Q){if(1&Q&&(t=F(t)),8&Q)return t;if(4&Q&&"object"==typeof t&&t&&t.__esModule)return t;var B=Object.create(null);if(F.r(B),Object.defineProperty(B,"default",{enumerable:!0,value:t}),2&Q&&"string"!=typeof t)for(var U in t)F.d(B,U,function(Q){return t[Q]}.bind(null,U));return B},F.n=function(t){var Q=t&&t.__esModule?function(){return t.default}:function(){return t};return F.d(Q,"a",Q),Q},F.o=function(t,Q){return Object.prototype.hasOwnProperty.call(t,Q)},F.p="",F(F.s=0)}([function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar VNode = __webpack_require__(1);\n\n/**\r\n * 响应式MVVM对象\r\n */\n\nvar Reactive = function () {\n\tfunction Reactive() {\n\t\t_classCallCheck(this, Reactive);\n\n\t\tthis.$el = null;\n\t\tthis.$vnode = null;\n\t\tthis._vnode = null;\n\t\tthis.$data = null;\n\t\tthis.$methods = null;\n\t\tthis.$watch = null;\n\t\tthis.$beforeMount = null;\n\t\tthis.$mounted = null;\n\t\tthis.$beforeCreate = null;\n\t\tthis.$created = null;\n\t\tthis.$updated = null;\n\t\tthis.$beforeUpdate = null;\n\t}\n\n\t/**\r\n  * 实例方法：挂载到指定节点\r\n  * @param {Object} selector\r\n  */\n\n\n\t_createClass(Reactive, [{\n\t\tkey: 'mount',\n\t\tvalue: function mount(selector) {\n\t\t\tif (typeof this.$beforeMount == 'function') {\n\t\t\t\tthis.$beforeMount.call(this);\n\t\t\t}\n\t\t\t//获取挂载元素\n\t\t\tvar el = document.querySelector(selector);\n\t\t\tif (!el) {\n\t\t\t\tel = document.body;\n\t\t\t}\n\t\t\t//创建虚拟dom并渲染真实数据\n\t\t\tthis.$vnode = this._updateVnodes(this._createVNode(el));\n\t\t\tthis._vnode = this.$vnode.fullClone();\n\t\t\tthis._vnode = this._updateVnodes(this._vnode);\n\t\t\t//虚拟dom的el插入页面\n\t\t\tel.parentNode.insertBefore(this._vnode.el, el);\n\t\t\t//移除原来的\n\t\t\tel.parentNode.removeChild(el);\n\t\t\t//更新$el\n\t\t\tthis.$el = this._vnode.el;\n\t\t\tif (typeof this.$mounted == 'function') {\n\t\t\t\tthis.$mounted.call(this);\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\r\n   * 监听到数据更新对dom操作\r\n   */\n\n\t}, {\n\t\tkey: '_compare',\n\t\tvalue: function _compare() {\n\t\t\t//更新$vnode\n\t\t\tthis.$vnode = this._updateVnodes(this.$vnode);\n\t\t\t//如果$vnode和_vnode不一样进行处理\n\t\t\tif (!this.$vnode.equal(this._vnode)) {\n\t\t\t\tthis._vnode = this.$vnode.fullClone();\n\t\t\t\tthis._vnode = this._updateVnodes(this._vnode);\n\t\t\t\tthis.$el.parentNode.insertBefore(this._vnode.el, this.$el);\n\t\t\t\tthis.$el.parentNode.removeChild(this.$el);\n\t\t\t\tthis.$el = this._vnode.el;\n\t\t\t} else {\n\t\t\t\t//比较子孙节点\n\t\t\t\tthis._compareChildren(this._vnode, this.$vnode);\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 比对同一级子元素vnode\r\n   * @param {Object} oldVnode\r\n   * @param {Object} vnode\r\n   */\n\n\t}, {\n\t\tkey: '_compareChildren',\n\t\tvalue: function _compareChildren(oldVnode, vnode) {\n\t\t\tfor (var i = 0; i < oldVnode.children.length; i++) {\n\t\t\t\tfor (var j = 0; j < vnode.children.length; j++) {\n\t\t\t\t\tvar oVn = oldVnode.children[i]; //当前旧节点\n\t\t\t\t\tvar nVn = vnode.children[j]; //当前节点\n\t\t\t\t\tif (!nVn.equal(oVn) && nVn.id === oVn.id) {\n\t\t\t\t\t\tvar el = nVn.el.cloneNode(true);\n\t\t\t\t\t\toldVnode.el.insertBefore(el, oVn.el);\n\t\t\t\t\t\toVn.el.remove();\n\t\t\t\t\t\toVn.el = el;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._compareChildren(oVn, nVn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 更新指定虚拟dom树及其子元素\r\n   * @param {Object} vnode\r\n   */\n\n\t}, {\n\t\tkey: '_updateVnodes',\n\t\tvalue: function _updateVnodes(vnode) {\n\t\t\t//根据虚拟dom递归创建真实节点以及其子节点（更新虚拟dom的el）\n\t\t\tvnode.createElement(this);\n\t\t\t//将虚拟dom的el填充到父元素的el中\n\t\t\tvar f = function f(item) {\n\t\t\t\titem.children.forEach(function (child) {\n\t\t\t\t\tif (child.attrs['lk:if']) {\n\t\t\t\t\t\tvar needCreate = child.compileAttrs['lk:if'];\n\t\t\t\t\t\tif (needCreate) {\n\t\t\t\t\t\t\titem.el.appendChild(child.el);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tchild.el.remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\titem.el.appendChild(child.el);\n\t\t\t\t\t}\n\t\t\t\t\tif (child.attrs['lk:else']) {\n\t\t\t\t\t\tvar brotherVnode = child.getIfVnode();\n\t\t\t\t\t\tif (brotherVnode) {\n\t\t\t\t\t\t\tvar brotherNeedCreate = brotherVnode.compileAttrs['lk:if'];\n\t\t\t\t\t\t\tif (brotherNeedCreate) {\n\t\t\t\t\t\t\t\tchild.el.remove();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\titem.el.appendChild(child.el);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error('lk:else must be combined with lk:if');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tf(child);\n\t\t\t\t});\n\t\t\t};\n\t\t\tf(vnode);\n\t\t\treturn vnode;\n\t\t}\n\n\t\t/**\r\n   * 创建虚拟dom\r\n   * @param {Object} $el\r\n   * @param {Object} index\r\n   * @param {Object} parent\r\n   */\n\n\t}, {\n\t\tkey: '_createVNode',\n\t\tvalue: function _createVNode($el, index, parent) {\n\t\t\tvar children = [];\n\t\t\tvar text = VNode.getNodeText($el);\n\t\t\tvar nodeType = $el.nodeType;\n\t\t\tvar data = {};\n\t\t\tvar tag = $el.nodeName;\n\t\t\tvar attrs = {};\n\t\t\tif ($el.attributes) {\n\t\t\t\tvar length = $el.attributes.length;\n\t\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\t\tvar it = $el.attributes[i];\n\t\t\t\t\t//属性名\n\t\t\t\t\tvar localName = it.localName;\n\t\t\t\t\t//属性值\n\t\t\t\t\tvar value = it.value;\n\t\t\t\t\tattrs[localName] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tindex = index ? '' + index : '0';\n\t\t\tvar id = parent ? 'vn_' + parent.id.substring(3) + '_' + index : 'vn_' + index;\n\t\t\tvar vnode = new VNode(id, tag, $el, children, text, data, parent, nodeType, attrs);\n\t\t\t//获取子节点\n\t\t\tvar childs = $el.childNodes;\n\t\t\t// 深度优先算法\n\t\t\tfor (var _i = 0; _i < childs.length; _i++) {\n\t\t\t\tvar childNode = this._createVNode(childs[_i], _i, vnode);\n\t\t\t\tvnode.children.push(childNode);\n\t\t\t}\n\t\t\treturn vnode;\n\t\t}\n\n\t\t/**\r\n   * 监听数据变更进行处理\r\n   * @param {Object} keys\r\n   * @param {Object} key\r\n   * @param {Object} value\r\n   */\n\n\t}, {\n\t\tkey: '_observer',\n\t\tvalue: function _observer(keys, key, value) {\n\t\t\tvar _this = this;\n\n\t\t\t//方法发生变化\n\t\t\tif (keys[0] == '$methods') {\n\t\t\t\t//更新挂载在实例下的方法\n\t\t\t\tObject.keys(this.$methods).forEach(function (key) {\n\t\t\t\t\t_this[key] = _this.$methods[key];\n\t\t\t\t});\n\t\t\t}\n\t\t\t//源数据发生变化\n\t\t\tif (keys[0] == '$data') {\n\t\t\t\t//更新挂载在实例下的数据\n\t\t\t\tObject.keys(this.$data).forEach(function (key) {\n\t\t\t\t\t_this[key] = _this.$data[key];\n\t\t\t\t});\n\t\t\t}\n\t\t\t//dom变更\n\t\t\tif (this.$vnode) {\n\t\t\t\t//dom更新\n\t\t\t\tthis._compare();\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 创建一个Reactive的Proxy对象\r\n   * @param {Object} options\r\n   */\n\n\t}], [{\n\t\tkey: 'createApp',\n\t\tvalue: function createApp(options) {\n\t\t\t//初始化创建一个实例\n\t\t\tvar instance = new Reactive();\n\t\t\t//校验参数\n\t\t\tvar opt = Reactive._validator(options);\n\t\t\t//配置钩子函数\n\t\t\tinstance.$beforeCreate = opt.beforeCreate;\n\t\t\tinstance.$created = opt.created;\n\t\t\tinstance.$beforeUpdate = opt.beforeUpdate;\n\t\t\tinstance.$updated = opt.updated;\n\t\t\tinstance.$beforeMount = opt.beforeMount;\n\t\t\tinstance.$mounted = opt.mounted;\n\t\t\t//执行钩子函数beforeCreate\n\t\t\tinstance.$beforeCreate.call(instance);\n\t\t\t//配置watch监听参数\n\t\t\tinstance.$watch = opt.watch;\n\t\t\t//配置methods方法参数\n\t\t\tinstance.$methods = opt.methods;\n\t\t\t//配置data数据参数\n\t\t\tinstance.$data = opt.data;\n\t\t\t//将data直接挂载在实例上\n\t\t\tObject.keys(instance.$data).forEach(function (key) {\n\t\t\t\tinstance[key] = instance.$data[key];\n\t\t\t});\n\t\t\t//将methods直接挂载在实例上\n\t\t\tObject.keys(instance.$methods).forEach(function (key) {\n\t\t\t\tinstance[key] = instance.$methods[key];\n\t\t\t});\n\t\t\t//进行proxy代理\n\t\t\tinstance = Reactive._proxy(instance);\n\t\t\t//执行钩子函数created\n\t\t\tinstance.$created.call(instance);\n\t\t\t//返回实例\n\t\t\treturn instance;\n\t\t}\n\n\t\t/**\r\n   * 获取不需要监听的属性数组\r\n   */\n\n\t}, {\n\t\tkey: '_getUnObserveProperties',\n\t\tvalue: function _getUnObserveProperties() {\n\t\t\treturn ['$el', '$vnode', '_vnode', '$watch', 'mount', '_compare', '_compareChildren', '_updateVnodes', '_createVNode', '_observer', '$beforeCreate', '$created', '$beforeMount', '$mounted', '$beforeUpdate', '$updated'];\n\t\t}\n\n\t\t/**\r\n   * 检验options参数\r\n   * @param {Object} options\r\n   */\n\n\t}, {\n\t\tkey: '_validator',\n\t\tvalue: function _validator(options) {\n\t\t\tvar _opt;\n\n\t\t\tvar opt = (_opt = {\n\t\t\t\tdata: {},\n\t\t\t\twatch: {},\n\t\t\t\tmethods: {},\n\t\t\t\tmounted: function mounted() {},\n\t\t\t\tbeforeCreate: function beforeCreate() {},\n\t\t\t\tcreated: function created() {},\n\t\t\t\tbeforeMount: function beforeMount() {}\n\t\t\t}, _defineProperty(_opt, 'mounted', function mounted() {}), _defineProperty(_opt, 'beforeUpdate', function beforeUpdate() {}), _defineProperty(_opt, 'updated', function updated() {}), _opt);\n\t\t\tif ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) == 'object' && options) {\n\t\t\t\tif (_typeof(options.data) == 'object' && options.data) {\n\t\t\t\t\topt.data = options.data;\n\t\t\t\t}\n\t\t\t\tif (_typeof(options.watch) == 'object' && options.watch) {\n\t\t\t\t\tObject.keys(options.watch).forEach(function (watchName) {\n\t\t\t\t\t\tif (typeof options.watch[watchName] != 'function' || !options.watch[watchName]) {\n\t\t\t\t\t\t\tthrow new Error('The definition of \"' + watchName + '\" in watch should be a method');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\topt.watch = options.watch;\n\t\t\t\t}\n\t\t\t\tif (_typeof(options.methods) == 'object' && options.methods) {\n\t\t\t\t\tObject.keys(options.methods).forEach(function (methodName) {\n\t\t\t\t\t\tif (typeof options.methods[methodName] != 'function' || !options.methods[methodName]) {\n\t\t\t\t\t\t\tthrow new Error('The definition of \"' + methodName + '\" in methods should be a method');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\topt.methods = options.methods;\n\t\t\t\t}\n\t\t\t\tif (typeof options.beforeMount == 'function' && options.beforeMount) {\n\t\t\t\t\topt.beforeMount = options.beforeMount;\n\t\t\t\t}\n\t\t\t\tif (typeof options.mounted == 'function' && options.mounted) {\n\t\t\t\t\topt.mounted = options.mounted;\n\t\t\t\t}\n\t\t\t\tif (typeof options.beforeCreate == 'function' && options.beforeCreate) {\n\t\t\t\t\topt.beforeCreate = options.beforeCreate;\n\t\t\t\t}\n\t\t\t\tif (typeof options.created == 'function' && options.created) {\n\t\t\t\t\topt.created = options.created;\n\t\t\t\t}\n\t\t\t\tif (typeof options.beforeUpdate == 'function' && options.beforeUpdate) {\n\t\t\t\t\topt.beforeUpdate = options.beforeUpdate;\n\t\t\t\t}\n\t\t\t\tif (typeof options.updated == 'function' && options.updated) {\n\t\t\t\t\topt.updated = options.updated;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn opt;\n\t\t}\n\n\t\t/**\r\n   * proxy代理实例\r\n   * @param {Object} instance\r\n   */\n\n\t}, {\n\t\tkey: '_proxy',\n\t\tvalue: function _proxy(instance) {\n\t\t\tvar watcher = function watcher(parentKey) {\n\t\t\t\treturn {\n\t\t\t\t\tget: function get(target, key) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tvar watchKey = parentKey ? parentKey + '.' + key : key;\n\t\t\t\t\t\t\tif (Reactive._getUnObserveProperties().includes(key)) {\n\t\t\t\t\t\t\t\treturn Reflect.get(target, key);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn new Proxy(target[key], watcher(watchKey));\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\treturn Reflect.get(target, key);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tset: function set(target, key, value) {\n\t\t\t\t\t\tif (Reactive._getUnObserveProperties().includes(key)) {\n\t\t\t\t\t\t\tReflect.set(target, key, value);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar watchKey = parentKey ? parentKey + '.' + key : key;\n\t\t\t\t\t\tvar oldValue = Reflect.get(target, key);\n\t\t\t\t\t\tvar oldTarget = undefined;\n\t\t\t\t\t\t//当是数组或者对象变动时获取旧的对象或数组\n\t\t\t\t\t\tif (Array.isArray(target)) {\n\t\t\t\t\t\t\toldTarget = [].concat(_toConsumableArray(target));\n\t\t\t\t\t\t} else if ((typeof target === 'undefined' ? 'undefined' : _typeof(target)) == 'object' && target) {\n\t\t\t\t\t\t\toldTarget = Object.assign({}, target);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (oldValue === value) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//更新之前回调钩子函数\n\t\t\t\t\t\tif (typeof instance.$beforeUpdate == 'function') {\n\t\t\t\t\t\t\tinstance.$beforeUpdate.call(instance, key, oldValue, value, target instanceof Reactive ? undefined : target);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//更新数据\n\t\t\t\t\t\tReflect.set(target, key, value);\n\t\t\t\t\t\t//watch键名解析\n\t\t\t\t\t\tvar keys = Reactive._parseWatchKey(watchKey);\n\t\t\t\t\t\t//监听\n\t\t\t\t\t\tinstance._observer(keys, key, value);\n\t\t\t\t\t\t//回调\n\t\t\t\t\t\tkeys.forEach(function (item, index) {\n\t\t\t\t\t\t\tif (_typeof(instance.$watch) == 'object' && instance.$watch[item] && typeof instance.$watch[item] == 'function') {\n\t\t\t\t\t\t\t\tif (index === keys.length - 1) {\n\t\t\t\t\t\t\t\t\t//对象属性监听\n\t\t\t\t\t\t\t\t\tinstance.$watch[item].call(instance, value, oldValue);\n\t\t\t\t\t\t\t\t} else if (index === keys.length - 2) {\n\t\t\t\t\t\t\t\t\t//对象监听\n\t\t\t\t\t\t\t\t\tinstance.$watch[item].call(instance, target, oldTarget);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t//对象祖先父级监听\n\t\t\t\t\t\t\t\t\tinstance.$watch[item].call(instance);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\t//更新完毕回调调用钩子函数\n\t\t\t\t\t\tif (typeof instance.$updated == 'function') {\n\t\t\t\t\t\t\tinstance.$updated.call(instance, key, oldValue, value, target instanceof Reactive ? undefined : target);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t\treturn new Proxy(instance, watcher());\n\t\t}\n\n\t\t/**\r\n   * 解析$watch字段数据\r\n   * @param {Object} watchKey\r\n   */\n\n\t}, {\n\t\tkey: '_parseWatchKey',\n\t\tvalue: function _parseWatchKey(watchKey) {\n\t\t\tvar arr = watchKey.split('.');\n\t\t\tvar result = [];\n\t\t\tvar keyFirst = '';\n\t\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\t\tvar key = '';\n\t\t\t\tif (keyFirst) {\n\t\t\t\t\tkey = keyFirst + '.' + arr[i];\n\t\t\t\t} else {\n\t\t\t\t\tkey = keyFirst + arr[i];\n\t\t\t\t}\n\t\t\t\tkeyFirst = key;\n\t\t\t\tresult.push(key);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}]);\n\n\treturn Reactive;\n}();\n\nmodule.exports = Reactive;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 虚拟dom对象\r\n */\nvar VNode = function () {\n\tfunction VNode(id, tag, el, children, text, data, parent, nodeType, attrs) {\n\t\t_classCallCheck(this, VNode);\n\n\t\tthis.id = id; //节点唯一键\n\t\tthis.tag = tag; //标签类型，DIV，SPAN，INPUT，#text\n\t\tthis.el = el; //对应的真实节点\n\t\tthis.children = children; //当前节点下的子节点\n\t\tthis.text = text; //当前虚拟节点的文本\n\t\tthis.data = data; //reactive关联的数据\n\t\tthis.parent = parent; //父级节点\n\t\tthis.nodeType = nodeType; //节点类型\n\t\tthis.attrs = attrs; //存放属性对象数组\n\t\tthis.$reg = /\\{\\{(.*?)\\}\\}/g; //匹配规则\n\t\tthis.compileAttrs = []; //编译转换后的属性对应值\n\t}\n\n\t/**\r\n  * 标签类型为文本节点和注释节点时获取内容\r\n  * @param {Object} el\r\n  */\n\n\n\t_createClass(VNode, [{\n\t\tkey: 'equal',\n\n\n\t\t/**\r\n   * 用于_vnode与$vnode比较或者其子孙元素比较，判断某id的虚拟节点是否发生了变化\r\n   * @param {Object} vnode\r\n   */\n\t\tvalue: function equal(vnode) {\n\t\t\tif (!(vnode instanceof VNode)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.tag !== vnode.tag) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.text !== vnode.text) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.attrs.length !== vnode.attrs.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.compileAttrs.length !== vnode.compileAttrs.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.nodeType !== vnode.nodeType) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar oldAttrs = Object.keys(vnode.attrs);\n\t\t\tfor (var i = 0; i < oldAttrs.length; i++) {\n\t\t\t\tif (vnode.attrs[oldAttrs[i]] !== this.attrs[oldAttrs[i]]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar newAttrs = Object.keys(this.attrs);\n\t\t\tfor (var i = 0; i < newAttrs.length; i++) {\n\t\t\t\tif (this.attrs[newAttrs[i]] !== vnode.attrs[newAttrs[i]]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar oldData = Object.keys(vnode.data);\n\t\t\tfor (var i = 0; i < oldData.length; i++) {\n\t\t\t\tif (vnode.data[oldData[i]] !== this.data[oldData[i]]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar newData = Object.keys(this.data);\n\t\t\tfor (var i = 0; i < newData.length; i++) {\n\t\t\t\tif (this.data[newData[i]] !== vnode.data[newData[i]]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.children.length !== vnode.children.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar oldCompileAttrs = Object.keys(vnode.compileAttrs);\n\t\t\tfor (var i = 0; i < oldCompileAttrs.length; i++) {\n\t\t\t\tif (vnode.compileAttrs[oldCompileAttrs[i]] !== this.compileAttrs[oldCompileAttrs[i]]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar newCompileAttrs = Object.keys(this.compileAttrs);\n\t\t\tfor (var i = 0; i < newCompileAttrs.length; i++) {\n\t\t\t\tif (this.compileAttrs[newCompileAttrs[i]] !== vnode.compileAttrs[newCompileAttrs[i]]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\r\n   * 根据vnode创建真实节点\r\n   * @param {Object} reactive reactive实例\r\n   */\n\n\t}, {\n\t\tkey: 'createElement',\n\t\tvalue: function createElement(reactive) {\n\t\t\tvar _this = this;\n\n\t\t\tvar ele = null;\n\t\t\t//文本节点\n\t\t\tif (this.nodeType === 3) {\n\t\t\t\tvar text = '';\n\t\t\t\tvar forNode = this.getForLoopVnode();\n\t\t\t\tif (forNode) {\n\t\t\t\t\tthis.$reg.lastIndex = 0;\n\t\t\t\t\tif (this.$reg.test(this.text)) {\n\t\t\t\t\t\tvar item = forNode.attrs['lk:for-item'] || 'item';\n\t\t\t\t\t\tvar index = forNode.attrs['lk:for-index'] || 'index';\n\t\t\t\t\t\tthis.$reg.lastIndex = 0;\n\t\t\t\t\t\ttext = this.text.replace(this.$reg, function (match, key) {\n\t\t\t\t\t\t\tvar keys = key.split('.');\n\t\t\t\t\t\t\tif (keys[0] == item) {\n\t\t\t\t\t\t\t\treturn _this.toString(_this.parseKey(forNode.data, key));\n\t\t\t\t\t\t\t} else if (keys[0] == index) {\n\t\t\t\t\t\t\t\treturn _this.toString(forNode.data[index]);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn _this.render(match, reactive);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext = this.render(this.text, reactive);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttext = this.render(this.text, reactive);\n\t\t\t\t}\n\t\t\t\tele = document.createTextNode(text);\n\t\t\t} else if (this.nodeType === 1) {\n\t\t\t\t//元素节点\n\t\t\t\tele = document.createElement(this.tag);\n\t\t\t\tvar attrs = Object.keys(this.attrs);\n\t\t\t\tfor (var i = 0; i < attrs.length; i++) {\n\t\t\t\t\tvar attr = attrs[i];\n\t\t\t\t\tvar orgAttrValue = this.attrs[attr];\n\t\t\t\t\t//表示特殊指令\n\t\t\t\t\tif (attr.startsWith('lk:')) {\n\t\t\t\t\t\tvar name = attr.substr(3);\n\t\t\t\t\t\tif (name === 'for') {\n\t\t\t\t\t\t\t//for循环\n\t\t\t\t\t\t\tif (orgAttrValue !== 'lk:for') {\n\t\t\t\t\t\t\t\tthis.render(orgAttrValue, reactive, attr);\n\t\t\t\t\t\t\t\tvar list = this.compileAttrs[attr];\n\t\t\t\t\t\t\t\tvar listKeys = Object.keys(list);\n\t\t\t\t\t\t\t\tvar _item = this.attrs['lk:for-item'] || 'item';\n\t\t\t\t\t\t\t\tvar _index = this.attrs['lk:for-index'] || 'index';\n\t\t\t\t\t\t\t\tthis.attrs['lk:for'] = 'lk:for';\n\t\t\t\t\t\t\t\tthis.data[_item] = list[listKeys[0]];\n\t\t\t\t\t\t\t\tthis.data[_index] = 0;\n\t\t\t\t\t\t\t\tthis.compileAttrs['lk:for-item'] = list[listKeys[0]];\n\t\t\t\t\t\t\t\tthis.compileAttrs['lk:for-index'] = 0;\n\t\t\t\t\t\t\t\tvar arr = Object.keys(list);\n\t\t\t\t\t\t\t\tfor (var j = arr.length - 1; j > 0; j--) {\n\t\t\t\t\t\t\t\t\tvar data = {};\n\t\t\t\t\t\t\t\t\tdata[_item] = list[listKeys[j]];\n\t\t\t\t\t\t\t\t\tdata[_index] = j;\n\t\t\t\t\t\t\t\t\tvar copyInstance = this.clone(j, this.parent, data);\n\t\t\t\t\t\t\t\t\tcopyInstance.compileAttrs['lk:for-item'] = list[listKeys[j]];\n\t\t\t\t\t\t\t\t\tcopyInstance.compileAttrs['lk:for-index'] = j;\n\t\t\t\t\t\t\t\t\tthis.insertAfter(copyInstance);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis.parent.createElement(reactive);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (name == 'if') {\n\t\t\t\t\t\t\t//if语句\n\t\t\t\t\t\t\tthis.render(orgAttrValue, reactive, attr);\n\t\t\t\t\t\t} else if (name == 'else') {\n\t\t\t\t\t\t\tthis.attrs[attr] = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (attr.startsWith('@')) {\n\t\t\t\t\t\t//事件\n\t\t\t\t\t\tvar attrValue = this.render(orgAttrValue, reactive);\n\t\t\t\t\t\tvar eventName = attr.substr(1);\n\t\t\t\t\t\tele.addEventListener(eventName, function (e) {\n\t\t\t\t\t\t\t//方法含有括号\n\t\t\t\t\t\t\tvar params = [];\n\t\t\t\t\t\t\tattrValue = attrValue.replace(/\\((.*?)\\)/g, function (match, key) {\n\t\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\t\tvar keys = key.split(',');\n\t\t\t\t\t\t\t\t\tkeys.forEach(function (item, index) {\n\t\t\t\t\t\t\t\t\t\tif (item == '$event') {\n\t\t\t\t\t\t\t\t\t\t\tparams.push(e);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tvar forNode = _this.getForLoopVnode();\n\t\t\t\t\t\t\t\t\t\t\tvar data = undefined;\n\t\t\t\t\t\t\t\t\t\t\tif (forNode) {\n\t\t\t\t\t\t\t\t\t\t\t\tdata = _this.parseKey(forNode.data, item) || _this.parseKey(reactive, item);\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tdata = _this.parseKey(reactive, item);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tparams.push(data);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tparams.push(e);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tvar f = reactive[attrValue];\n\t\t\t\t\t\t\tif (f) {\n\t\t\t\t\t\t\t\tf.apply(reactive, params);\n\t\t\t\t\t\t\t\t//解决事件中无法监听数据bug\n\t\t\t\t\t\t\t\treactive._compare();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow Error('The \"' + attrValue + '\" method is not defined in methods');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar text = '';\n\t\t\t\t\t\tvar forNode = this.getForLoopVnode();\n\t\t\t\t\t\tif (forNode) {\n\t\t\t\t\t\t\tthis.$reg.lastIndex = 0;\n\t\t\t\t\t\t\tif (this.$reg.test(orgAttrValue)) {\n\t\t\t\t\t\t\t\tvar item = forNode.attrs['lk:for-item'] || 'item';\n\t\t\t\t\t\t\t\tvar index = forNode.attrs['lk:for-index'] || 'index';\n\t\t\t\t\t\t\t\tthis.$reg.lastIndex = 0;\n\t\t\t\t\t\t\t\ttext = orgAttrValue.replace(this.$reg, function (match, key) {\n\t\t\t\t\t\t\t\t\tvar keys = key.split('.');\n\t\t\t\t\t\t\t\t\tif (keys[0] == item) {\n\t\t\t\t\t\t\t\t\t\t_this.compileAttrs[(attr, _this.parseKey(forNode.data, key))];\n\t\t\t\t\t\t\t\t\t\treturn _this.toString(_this.parseKey(forNode.data, key));\n\t\t\t\t\t\t\t\t\t} else if (keys[0] == index) {\n\t\t\t\t\t\t\t\t\t\t_this.compileAttrs[forNode.data[index]];\n\t\t\t\t\t\t\t\t\t\treturn _this.toString(forNode.data[index]);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn _this.render(match, reactive, attr);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttext = this.render(orgAttrValue, reactive, attr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttext = this.render(orgAttrValue, reactive, attr);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//非字符串形式的属性值\n\t\t\t\t\t\tvar cAttrValue = this.compileAttrs[attr];\n\t\t\t\t\t\tif (typeof cAttrValue == 'boolean') {\n\t\t\t\t\t\t\tif (cAttrValue) {\n\t\t\t\t\t\t\t\tele.setAttribute(attr, attr);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tele.removeAttribute(attr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tele.setAttribute(attr, text);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (this.nodeType === 8) {\n\t\t\t\t//注释节点\n\t\t\t\tele = document.createComment(this.text);\n\t\t\t}\n\t\t\tthis.el = ele;\n\t\t\tthis.children.forEach(function (child) {\n\t\t\t\tchild.createElement(reactive);\n\t\t\t});\n\t\t}\n\n\t\t/**\r\n   * 根据该虚拟节点获取for循环根元素\r\n   */\n\n\t}, {\n\t\tkey: 'getForLoopVnode',\n\t\tvalue: function getForLoopVnode() {\n\t\t\tif (this.attrs['lk:for']) {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tif (!this.parent) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (this.parent.attrs['lk:for']) {\n\t\t\t\treturn this.parent;\n\t\t\t}\n\t\t\treturn this.parent.getForLoopVnode();\n\t\t}\n\n\t\t/**\r\n   * 同级复制vnode，id会变\r\n   * @param {Object} index 序列值\r\n   * @param {Object} parent 父元素\r\n   * @param {Object} data 数据\r\n   */\n\n\t}, {\n\t\tkey: 'clone',\n\t\tvalue: function clone(index, parent, data) {\n\t\t\tvar newData = Object.assign({}, this.data);\n\t\t\tif (data) {\n\t\t\t\tnewData = Object.assign(newData, data);\n\t\t\t}\n\t\t\tvar id = this.id + '_copy_' + index;\n\t\t\tvar tag = this.tag;\n\t\t\tvar el = this.el.cloneNode(true);\n\t\t\tvar children = [];\n\t\t\tvar text = this.text;\n\t\t\tvar nodeType = this.nodeType;\n\t\t\tvar attrs = Object.assign({}, this.attrs);\n\t\t\tvar vnode = new VNode(id, tag, el, children, text, newData, parent, nodeType, attrs);\n\t\t\tvnode.compileAttrs = Object.assign({}, this.compileAttrs);\n\t\t\tthis.children.forEach(function (child, index) {\n\t\t\t\tvar childNode = child.clone(index, vnode);\n\t\t\t\tvnode.children.push(childNode);\n\t\t\t});\n\t\t\treturn vnode;\n\t\t}\n\n\t\t/**\r\n   * 完全复制\r\n   */\n\n\t}, {\n\t\tkey: 'fullClone',\n\t\tvalue: function fullClone(parent) {\n\t\t\tvar id = this.id;\n\t\t\tvar tag = this.tag;\n\t\t\tvar el = this.el.cloneNode();\n\t\t\tvar children = [];\n\t\t\tvar text = this.text;\n\t\t\tvar data = Object.assign({}, this.data);\n\t\t\tvar nodeType = this.nodeType;\n\t\t\tvar attrs = Object.assign({}, this.attrs);\n\t\t\tvar vnode = new VNode(id, tag, el, children, text, data, parent, nodeType, attrs);\n\t\t\tvnode.compileAttrs = Object.assign({}, this.compileAttrs);\n\t\t\tthis.children.forEach(function (child, index) {\n\t\t\t\tvar childNode = child.fullClone(vnode);\n\t\t\t\tvnode.children.push(childNode);\n\t\t\t});\n\t\t\treturn vnode;\n\t\t}\n\n\t\t/**\r\n   * 将指定节点插入当前节点后\r\n   * @param {Object} vnode\r\n   */\n\n\t}, {\n\t\tkey: 'insertAfter',\n\t\tvalue: function insertAfter(vnode) {\n\t\t\tvar index = this.getIndex();\n\t\t\tthis.parent.children.splice(index + 1, 0, vnode);\n\t\t}\n\n\t\t/**\r\n   * 获取vnode在parent中的序列位置\r\n   */\n\n\t}, {\n\t\tkey: 'getIndex',\n\t\tvalue: function getIndex() {\n\t\t\tvar length = this.parent.children.length;\n\t\t\tvar index = -1;\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tif (this.parent.children[i].id == this.id) {\n\t\t\t\t\tindex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn index;\n\t\t}\n\n\t\t/**\r\n   * 解析{{}}内容，进行html字符串渲染\r\n   * @param {Object} template\r\n   * @param {Object} reactive\r\n   * @param {Object} attr 是否是为属性值解析，此值为属性\r\n   */\n\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render(template, reactive, attr) {\n\t\t\tvar _this2 = this;\n\n\t\t\tthis.$reg.lastIndex = 0;\n\t\t\tif (!this.$reg.test(template)) {\n\t\t\t\treturn template;\n\t\t\t}\n\t\t\tthis.$reg.lastIndex = 0;\n\t\t\tvar result = template.replace(this.$reg, function (matched, key) {\n\t\t\t\tvar data = _this2.parseKey(reactive, key);\n\t\t\t\t_this2.data[key] = data;\n\t\t\t\tif (attr) {\n\t\t\t\t\t_this2.compileAttrs[attr] = data;\n\t\t\t\t}\n\t\t\t\treturn _this2.toString(data);\n\t\t\t});\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\r\n   * 解析key\r\n   */\n\n\t}, {\n\t\tkey: 'parseKey',\n\t\tvalue: function parseKey(obj, key) {\n\t\t\tvar keys = key.split('.');\n\t\t\tvar result = '';\n\t\t\tvar temp = obj;\n\t\t\tkeys.forEach(function (item) {\n\t\t\t\ttemp = temp[item];\n\t\t\t\tresult = temp;\n\t\t\t});\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\r\n   * 转字符串\r\n   * @param {Object} data\r\n   */\n\n\t}, {\n\t\tkey: 'toString',\n\t\tvalue: function toString(data) {\n\t\t\tvar dataStr = '';\n\t\t\tif ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) == 'object') {\n\t\t\t\tdataStr = JSON.stringify(data);\n\t\t\t} else {\n\t\t\t\tdataStr = data.toString();\n\t\t\t}\n\t\t\treturn dataStr;\n\t\t}\n\n\t\t/**\r\n   * 含有lk:else的元素获取lk:if的元素\r\n   */\n\n\t}, {\n\t\tkey: 'getIfVnode',\n\t\tvalue: function getIfVnode() {\n\t\t\tvar index = this.getIndex();\n\t\t\tif (index == 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tindex = index - 1;\n\t\t\tvar vnode = this.parent.children[index];\n\t\t\tif (vnode.attrs['lk:if']) {\n\t\t\t\treturn vnode;\n\t\t\t}\n\t\t\treturn vnode.getIfVnode();\n\t\t}\n\t}], [{\n\t\tkey: 'getNodeText',\n\t\tvalue: function getNodeText(el) {\n\t\t\tif (el.nodeType === 3 || el.nodeType == 8) {\n\t\t\t\treturn el.nodeValue;\n\t\t\t} else {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn VNode;\n}();\n\nmodule.exports = VNode;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n")}])}));