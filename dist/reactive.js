!function(t,F){"object"==typeof exports&&"object"==typeof module?module.exports=F():"function"==typeof define&&define.amd?define([],F):"object"==typeof exports?exports.Reactive=F():t.Reactive=F()}(window,(function(){return function(t){var F={};function Q(U){if(F[U])return F[U].exports;var B=F[U]={i:U,l:!1,exports:{}};return t[U].call(B.exports,B,B.exports,Q),B.l=!0,B.exports}return Q.m=t,Q.c=F,Q.d=function(t,F,U){Q.o(t,F)||Object.defineProperty(t,F,{enumerable:!0,get:U})},Q.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},Q.t=function(t,F){if(1&F&&(t=Q(t)),8&F)return t;if(4&F&&"object"==typeof t&&t&&t.__esModule)return t;var U=Object.create(null);if(Q.r(U),Object.defineProperty(U,"default",{enumerable:!0,value:t}),2&F&&"string"!=typeof t)for(var B in t)Q.d(U,B,function(F){return t[F]}.bind(null,B));return U},Q.n=function(t){var F=t&&t.__esModule?function(){return t.default}:function(){return t};return Q.d(F,"a",F),F},Q.o=function(t,F){return Object.prototype.hasOwnProperty.call(t,F)},Q.p="",Q(Q.s=0)}([function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar VNode = __webpack_require__(1);\n\n/**\r\n * 响应式MVVM对象\r\n */\n\nvar Reactive = function () {\n\tfunction Reactive() {\n\t\t_classCallCheck(this, Reactive);\n\n\t\tthis.$el = null;\n\t\tthis.$vnode = null;\n\t\tthis._vnode = null;\n\t\tthis.$watch = null;\n\t\tthis.$beforeMount = null;\n\t\tthis.$mounted = null;\n\t\tthis.$beforeCreate = null;\n\t\tthis.$created = null;\n\t\tthis.$updated = null;\n\t\tthis.$beforeUpdate = null;\n\t\tthis.$template = null;\n\t}\n\n\t/**\r\n  * 实例方法：挂载到指定节点\r\n  * @param {Object} selector\r\n  */\n\n\n\t_createClass(Reactive, [{\n\t\tkey: 'mount',\n\t\tvalue: function mount(selector) {\n\t\t\tif (typeof this.$beforeMount == 'function') {\n\t\t\t\tthis.$beforeMount.call(this);\n\t\t\t}\n\t\t\tvar el = null;\n\t\t\t//如果是模板\n\t\t\tif ((typeof this.$template == 'string' || typeof this.$template == 'function') && this.$template) {\n\t\t\t\tvar template = '';\n\t\t\t\tif (typeof this.$template == 'function') {\n\t\t\t\t\ttemplate = this.$template.apply(this);\n\t\t\t\t} else {\n\t\t\t\t\ttemplate = this.$template;\n\t\t\t\t}\n\t\t\t\tvar doms = this.$string2dom(template);\n\t\t\t\tif (doms instanceof HTMLCollection) {\n\t\t\t\t\tthrow new Error('template should be a string of one HTML tag');\n\t\t\t\t}\n\t\t\t\tel = doms;\n\t\t\t} else {\n\t\t\t\t//挂载元素\n\t\t\t\t//获取挂载元素\n\t\t\t\tel = document.querySelector(selector);\n\t\t\t\tif (!el) {\n\t\t\t\t\tthrow new Error('The argument to the mount method must be dom selectors and the DOM that is pointed to cannot be empty');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//创建虚拟节点\n\t\t\tthis.$vnode = this._createVNode(el);\n\t\t\tthis._vnode = this._createVNode(el);\n\t\t\t//创建真实dom\n\t\t\tthis._updateVnodes(this.$vnode);\n\t\t\tthis._updateVnodes(this._vnode);\n\t\t\t//如果是模板，直接添加\n\t\t\tif (this.$template) {\n\t\t\t\tdocument.body.appendChild(this._vnode.el);\n\t\t\t} else {\n\t\t\t\tel.parentNode.insertBefore(this._vnode.el, el);\n\t\t\t\tel.remove();\n\t\t\t}\n\t\t\t//移除lk-cloak\n\t\t\tthis.$vnode.removeCloak();\n\t\t\tthis._vnode.removeCloak();\n\t\t\tif (typeof this.$mounted == 'function') {\n\t\t\t\tthis.$mounted.call(this);\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\r\n   * 根据字符串生成dom\r\n   * @param {Object} str\r\n   */\n\n\t}, {\n\t\tkey: '$string2dom',\n\t\tvalue: function $string2dom(str) {\n\t\t\tif (typeof str != \"string\") {\n\t\t\t\tstr = \"\";\n\t\t\t}\n\t\t\tvar parentEle = document.createElement(\"div\");\n\t\t\tparentEle.innerHTML = str;\n\t\t\tif (parentEle.children.length == 1) {\n\t\t\t\treturn parentEle.children[0];\n\t\t\t} else {\n\t\t\t\treturn parentEle.children;\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 强制更新视图\r\n   */\n\n\t}, {\n\t\tkey: '$forceUpdate',\n\t\tvalue: function $forceUpdate() {\n\t\t\tthis._updateVnodes(this.$vnode);\n\t\t\tthis._compare();\n\t\t}\n\n\t\t/**\r\n   * 比对新旧节点数据\r\n   */\n\n\t}, {\n\t\tkey: '_compare',\n\t\tvalue: function _compare() {\n\t\t\tif (!this.$vnode.isSame(this._vnode)) {\n\t\t\t\tvar el = this._vnode.el;\n\t\t\t\tthis._updateVnodes(this._vnode);\n\t\t\t\tel.parentNode.insertBefore(this._vnode.el, el);\n\t\t\t\tel.remove();\n\t\t\t\tthis.$el = this._vnode.el;\n\t\t\t} else {\n\t\t\t\tthis._compareChildren(this.$vnode, this._vnode);\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 比对子孙节点新旧数据\r\n   */\n\n\t}, {\n\t\tkey: '_compareChildren',\n\t\tvalue: function _compareChildren(vnode, oldVnode) {\n\t\t\tvar length = oldVnode.children.length;\n\t\t\tvar length2 = vnode.children.length;\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tfor (var j = 0; j < length2; j++) {\n\t\t\t\t\tvar oVn = oldVnode.children[i]; //当前旧节点\n\t\t\t\t\tvar nVn = vnode.children[j]; //当前节点\n\t\t\t\t\tif (!nVn.isSame(oVn) && nVn.id === oVn.id) {\n\t\t\t\t\t\tif (oVn.attrs['lk:if']) {\n\t\t\t\t\t\t\tif (oVn.data['$attrs']['lk:if']) {\n\t\t\t\t\t\t\t\t//旧节点原先已渲染\n\t\t\t\t\t\t\t\tif (nVn.attrs['lk:if']) {\n\t\t\t\t\t\t\t\t\t//新结点\n\t\t\t\t\t\t\t\t\tif (!nVn.data['$attrs']['lk:if']) {\n\t\t\t\t\t\t\t\t\t\t//新结点未渲染\n\t\t\t\t\t\t\t\t\t\tvar _el = oVn.parent.el;\n\t\t\t\t\t\t\t\t\t\tthis._updateVnodes(oVn.parent);\n\t\t\t\t\t\t\t\t\t\t_el.parentNode.insertBefore(oVn.parent.el, _el);\n\t\t\t\t\t\t\t\t\t\t_el.remove();\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t//旧节点原先未渲染\n\t\t\t\t\t\t\t\tif (nVn.attrs['lk:if']) {\n\t\t\t\t\t\t\t\t\t//新结点\n\t\t\t\t\t\t\t\t\tif (nVn.data['$attrs']['lk:if']) {\n\t\t\t\t\t\t\t\t\t\t//新结点已渲染\n\t\t\t\t\t\t\t\t\t\tvar _el2 = oVn.parent.el;\n\t\t\t\t\t\t\t\t\t\tthis._updateVnodes(oVn.parent);\n\t\t\t\t\t\t\t\t\t\t_el2.parentNode.insertBefore(oVn.parent.el, _el2);\n\t\t\t\t\t\t\t\t\t\t_el2.remove();\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar forNode = oVn.getForLoopVnode();\n\t\t\t\t\t\tif (forNode) {\n\t\t\t\t\t\t\tvar _el3 = forNode.parent.el;\n\t\t\t\t\t\t\tthis._updateVnodes(forNode.parent);\n\t\t\t\t\t\t\t_el3.parentNode.insertBefore(forNode.parent.el, _el3);\n\t\t\t\t\t\t\t_el3.remove();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar el = oVn.el;\n\t\t\t\t\t\tthis._updateVnodes(oVn);\n\t\t\t\t\t\tel.parentNode.insertBefore(oVn.el, el);\n\t\t\t\t\t\tel.remove();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._compareChildren(nVn, oVn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 更新虚拟节点数据\r\n   */\n\n\t}, {\n\t\tkey: '_updateVnodes',\n\t\tvalue: function _updateVnodes(vnode) {\n\t\t\t//根据虚拟dom递归创建真实节点以及其子节点（更新虚拟dom的el）\n\t\t\tvnode.createElement(this);\n\t\t\t//将虚拟dom的el填充到父元素的el中\n\t\t\tvar f = function f(item) {\n\t\t\t\titem.children.forEach(function (child) {\n\t\t\t\t\tif (child.attrs['lk:for']) {\n\t\t\t\t\t\tvar list = child.data['$attrs']['lk:for'];\n\t\t\t\t\t\tvar listKeys = Object.keys(list);\n\t\t\t\t\t\tif (listKeys.length == 0) {\n\t\t\t\t\t\t\tchild.el.remove();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (child.attrs['lk:if']) {\n\t\t\t\t\t\t\t\tvar needCreate = child.data['$attrs']['lk:if'];\n\t\t\t\t\t\t\t\tif (needCreate) {\n\t\t\t\t\t\t\t\t\titem.el.appendChild(child.el);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tchild.el.remove();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (child.attrs['lk:else']) {\n\t\t\t\t\t\t\t\tvar brotherVnode = child.getIfVnode();\n\t\t\t\t\t\t\t\tif (brotherVnode) {\n\t\t\t\t\t\t\t\t\tvar brotherNeedCreate = brotherVnode.data['$attrs']['lk:if'];\n\t\t\t\t\t\t\t\t\tif (brotherNeedCreate) {\n\t\t\t\t\t\t\t\t\t\tchild.el.remove();\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\titem.el.appendChild(child.el);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthrow new Error('lk:else must be combined with lk:if');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\titem.el.appendChild(child.el);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (child.attrs['lk:if']) {\n\t\t\t\t\t\tvar _needCreate = child.data['$attrs']['lk:if'];\n\t\t\t\t\t\tif (_needCreate) {\n\t\t\t\t\t\t\titem.el.appendChild(child.el);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tchild.el.remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (child.attrs['lk:else']) {\n\t\t\t\t\t\tvar brotherVnode = child.getIfVnode();\n\t\t\t\t\t\tif (brotherVnode) {\n\t\t\t\t\t\t\tvar _brotherNeedCreate = brotherVnode.data['$attrs']['lk:if'];\n\t\t\t\t\t\t\tif (_brotherNeedCreate) {\n\t\t\t\t\t\t\t\tchild.el.remove();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\titem.el.appendChild(child.el);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error('lk:else must be combined with lk:if');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\titem.el.appendChild(child.el);\n\t\t\t\t\t}\n\n\t\t\t\t\tf(child);\n\t\t\t\t});\n\t\t\t};\n\t\t\tf(vnode);\n\t\t}\n\n\t\t/**\r\n   * 创建虚拟dom\r\n   */\n\n\t}, {\n\t\tkey: '_createVNode',\n\t\tvalue: function _createVNode(el, index, parent) {\n\t\t\tindex = index ? '' + index : 0;\n\t\t\tvar id = parent ? 'vn_' + parent.id.substring(3) + '_' + index : 'vn_' + index;\n\t\t\tvar tag = el.nodeName;\n\t\t\tvar attrs = {};\n\t\t\tvar data = {};\n\t\t\tvar text = VNode.getNodeText(el);\n\t\t\tvar children = [];\n\t\t\tvar isText = el.nodeType == 3;\n\t\t\tvar isComment = el.nodeType == 8;\n\t\t\tif (el.attributes) {\n\t\t\t\tvar length = el.attributes.length;\n\t\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\t\tvar it = el.attributes[i];\n\t\t\t\t\t//属性名\n\t\t\t\t\tvar localName = it.localName;\n\t\t\t\t\t//属性值\n\t\t\t\t\tvar value = it.value;\n\t\t\t\t\tattrs[localName] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar vnode = new VNode(id, tag, attrs, data, text, children, parent, isText, isComment);\n\t\t\t//获取子节点\n\t\t\tvar childs = el.childNodes;\n\t\t\tvar childLength = childs.length;\n\t\t\t// 深度优先算法\n\t\t\tfor (var _i = 0; _i < childLength; _i++) {\n\t\t\t\tvar childNode = this._createVNode(childs[_i], _i, vnode);\n\t\t\t\tvnode.children.push(childNode);\n\t\t\t}\n\t\t\treturn vnode;\n\t\t}\n\n\t\t/**\r\n   * 监听数据变更进行处理\r\n   * @param {Object} keys\r\n   * @param {Object} key\r\n   * @param {Object} value\r\n   */\n\n\t}, {\n\t\tkey: '_observer',\n\t\tvalue: function _observer(keys, key, value) {\n\t\t\tif (this.$vnode) {\n\t\t\t\tthis._updateVnodes(this.$vnode);\n\t\t\t\tthis._compare();\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 创建一个Reactive的Proxy对象\r\n   * @param {Object} options\r\n   */\n\n\t}], [{\n\t\tkey: 'createApp',\n\t\tvalue: function createApp(options) {\n\t\t\t//初始化创建一个实例\n\t\t\tvar instance = new Reactive();\n\t\t\t//校验参数\n\t\t\tvar opt = Reactive._validator(options);\n\t\t\t//配置template\n\t\t\tinstance.$template = opt.template;\n\t\t\t//配置钩子函数\n\t\t\tinstance.$beforeCreate = opt.beforeCreate;\n\t\t\tinstance.$created = opt.created;\n\t\t\tinstance.$beforeUpdate = opt.beforeUpdate;\n\t\t\tinstance.$updated = opt.updated;\n\t\t\tinstance.$beforeMount = opt.beforeMount;\n\t\t\tinstance.$mounted = opt.mounted;\n\t\t\t//执行钩子函数beforeCreate\n\t\t\tinstance.$beforeCreate.call(instance);\n\t\t\t//配置watch监听参数\n\t\t\tinstance.$watch = opt.watch;\n\t\t\t//将data直接挂载在实例上\n\t\t\tObject.keys(opt.data).forEach(function (key) {\n\t\t\t\tif (instance[key]) {\n\t\t\t\t\tthrow new Error(key + ' is already defined in the instance');\n\t\t\t\t}\n\t\t\t\tinstance[key] = opt.data[key];\n\t\t\t});\n\t\t\t//将methods直接挂载在实例上\n\t\t\tObject.keys(opt.methods).forEach(function (key) {\n\t\t\t\tif (instance[key]) {\n\t\t\t\t\tthrow new Error(key + ' is already defined in the instance');\n\t\t\t\t}\n\t\t\t\tinstance[key] = opt.methods[key];\n\t\t\t});\n\t\t\t//进行proxy代理\n\t\t\tinstance = Reactive._proxy(instance);\n\t\t\t//执行钩子函数created\n\t\t\tinstance.$created.call(instance);\n\t\t\t//返回实例\n\t\t\treturn instance;\n\t\t}\n\n\t\t/**\r\n   * 判断reactive中的指定属性是否不需要监听\r\n   * @param {Object} prop\r\n   * 不需要监听返回true，需要监听返回false\r\n   */\n\n\t}, {\n\t\tkey: '_UnObserverProperties',\n\t\tvalue: function _UnObserverProperties(prop) {\n\t\t\treturn ['$el', '$vnode', '_vnode', '$watch', 'mount', '_observer', '$beforeCreate', '$created', '$beforeMount', '$mounted', '$beforeUpdate', '$updated', '$template'].includes(prop);\n\t\t}\n\n\t\t/**\r\n   * 检验options参数\r\n   * @param {Object} options\r\n   */\n\n\t}, {\n\t\tkey: '_validator',\n\t\tvalue: function _validator(options) {\n\t\t\tvar opt = {\n\t\t\t\tdata: {},\n\t\t\t\twatch: {},\n\t\t\t\tmethods: {},\n\t\t\t\tbeforeCreate: function beforeCreate() {},\n\t\t\t\tcreated: function created() {},\n\t\t\t\tbeforeMount: function beforeMount() {},\n\t\t\t\tmounted: function mounted() {},\n\t\t\t\tbeforeUpdate: function beforeUpdate() {},\n\t\t\t\tupdated: function updated() {},\n\t\t\t\ttemplate: null\n\t\t\t};\n\t\t\tif ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) == 'object' && options) {\n\t\t\t\tif (_typeof(options.data) == 'object' && options.data) {\n\t\t\t\t\topt.data = options.data;\n\t\t\t\t}\n\t\t\t\tif (_typeof(options.watch) == 'object' && options.watch) {\n\t\t\t\t\tObject.keys(options.watch).forEach(function (watchName) {\n\t\t\t\t\t\tif (typeof options.watch[watchName] != 'function' || !options.watch[watchName]) {\n\t\t\t\t\t\t\tthrow new Error('The definition of \"' + watchName + '\" in watch should be a function');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\topt.watch = options.watch;\n\t\t\t\t}\n\t\t\t\tif (_typeof(options.methods) == 'object' && options.methods) {\n\t\t\t\t\tObject.keys(options.methods).forEach(function (methodName) {\n\t\t\t\t\t\tif (typeof options.methods[methodName] != 'function' || !options.methods[methodName]) {\n\t\t\t\t\t\t\tthrow new Error('The definition of \"' + methodName + '\" in methods should be a function');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\topt.methods = options.methods;\n\t\t\t\t}\n\t\t\t\tif (typeof options.beforeMount == 'function' && options.beforeMount) {\n\t\t\t\t\topt.beforeMount = options.beforeMount;\n\t\t\t\t}\n\t\t\t\tif (typeof options.mounted == 'function' && options.mounted) {\n\t\t\t\t\topt.mounted = options.mounted;\n\t\t\t\t}\n\t\t\t\tif (typeof options.beforeCreate == 'function' && options.beforeCreate) {\n\t\t\t\t\topt.beforeCreate = options.beforeCreate;\n\t\t\t\t}\n\t\t\t\tif (typeof options.created == 'function' && options.created) {\n\t\t\t\t\topt.created = options.created;\n\t\t\t\t}\n\t\t\t\tif (typeof options.beforeUpdate == 'function' && options.beforeUpdate) {\n\t\t\t\t\topt.beforeUpdate = options.beforeUpdate;\n\t\t\t\t}\n\t\t\t\tif (typeof options.updated == 'function' && options.updated) {\n\t\t\t\t\topt.updated = options.updated;\n\t\t\t\t}\n\t\t\t\tif ((typeof options.template == 'string' || typeof options.template == 'function') && options.template) {\n\t\t\t\t\topt.template = options.template;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"The argument to the 'createApp' method must be an object\");\n\t\t\t}\n\t\t\treturn opt;\n\t\t}\n\n\t\t/**\r\n   * proxy代理实例\r\n   * @param {Object} instance\r\n   */\n\n\t}, {\n\t\tkey: '_proxy',\n\t\tvalue: function _proxy(instance) {\n\t\t\tvar watcher = function watcher(parentKey) {\n\t\t\t\treturn {\n\t\t\t\t\tget: function get(target, key) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tvar watchKey = parentKey ? parentKey + '.' + key : key;\n\t\t\t\t\t\t\tif (Reactive._UnObserverProperties(key)) {\n\t\t\t\t\t\t\t\treturn Reflect.get(target, key);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn new Proxy(target[key], watcher(watchKey));\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\treturn Reflect.get(target, key);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tset: function set(target, key, value) {\n\t\t\t\t\t\tif (Reactive._UnObserverProperties(key)) {\n\t\t\t\t\t\t\tReflect.set(target, key, value);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar watchKey = parentKey ? parentKey + '.' + key : key;\n\t\t\t\t\t\tvar oldValue = Reflect.get(target, key);\n\t\t\t\t\t\tvar oldTarget = undefined;\n\t\t\t\t\t\t//当是数组或者对象变动时获取旧的对象或数组\n\t\t\t\t\t\tif (Array.isArray(target)) {\n\t\t\t\t\t\t\toldTarget = [].concat(_toConsumableArray(target));\n\t\t\t\t\t\t} else if ((typeof target === 'undefined' ? 'undefined' : _typeof(target)) == 'object' && target) {\n\t\t\t\t\t\t\toldTarget = Object.assign({}, target);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (oldValue === value) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//更新之前回调钩子函数\n\t\t\t\t\t\tif (typeof instance.$beforeUpdate == 'function') {\n\t\t\t\t\t\t\tinstance.$beforeUpdate.call(instance, key, oldValue, value, target instanceof Reactive ? undefined : target);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//更新数据\n\t\t\t\t\t\tReflect.set(target, key, value);\n\t\t\t\t\t\t//watch键名解析\n\t\t\t\t\t\tvar keys = Reactive._parseWatchKey(watchKey);\n\t\t\t\t\t\t//监听\n\t\t\t\t\t\tinstance._observer(keys, key, value);\n\t\t\t\t\t\t//回调\n\t\t\t\t\t\tkeys.forEach(function (item, index) {\n\t\t\t\t\t\t\tif (_typeof(instance.$watch) == 'object' && instance.$watch[item] && typeof instance.$watch[item] == 'function') {\n\t\t\t\t\t\t\t\tif (index === keys.length - 1) {\n\t\t\t\t\t\t\t\t\t//对象属性监听\n\t\t\t\t\t\t\t\t\tinstance.$watch[item].call(instance, value, oldValue);\n\t\t\t\t\t\t\t\t} else if (index === keys.length - 2) {\n\t\t\t\t\t\t\t\t\t//对象监听\n\t\t\t\t\t\t\t\t\tinstance.$watch[item].call(instance, target, oldTarget);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t//对象祖先父级监听\n\t\t\t\t\t\t\t\t\tinstance.$watch[item].call(instance);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\t//更新完毕回调调用钩子函数\n\t\t\t\t\t\tif (typeof instance.$updated == 'function') {\n\t\t\t\t\t\t\tinstance.$updated.call(instance, key, oldValue, value, target instanceof Reactive ? undefined : target);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t\treturn new Proxy(instance, watcher());\n\t\t}\n\n\t\t/**\r\n   * 解析$watch字段数据\r\n   * @param {Object} watchKey\r\n   */\n\n\t}, {\n\t\tkey: '_parseWatchKey',\n\t\tvalue: function _parseWatchKey(watchKey) {\n\t\t\tvar arr = watchKey.split('.');\n\t\t\tvar result = [];\n\t\t\tvar keyFirst = '';\n\t\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\t\tvar key = '';\n\t\t\t\tif (keyFirst) {\n\t\t\t\t\tkey = keyFirst + '.' + arr[i];\n\t\t\t\t} else {\n\t\t\t\t\tkey = keyFirst + arr[i];\n\t\t\t\t}\n\t\t\t\tkeyFirst = key;\n\t\t\t\tresult.push(key);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}]);\n\n\treturn Reactive;\n}();\n\nmodule.exports = Reactive;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZWFjdGl2ZS8uL3NyYy9SZWFjdGl2ZS5qcz81N2RiIl0sIm5hbWVzIjpbIlZOb2RlIiwicmVxdWlyZSIsIlJlYWN0aXZlIiwiJGVsIiwiJHZub2RlIiwiX3Zub2RlIiwiJHdhdGNoIiwiJGJlZm9yZU1vdW50IiwiJG1vdW50ZWQiLCIkYmVmb3JlQ3JlYXRlIiwiJGNyZWF0ZWQiLCIkdXBkYXRlZCIsIiRiZWZvcmVVcGRhdGUiLCIkdGVtcGxhdGUiLCJzZWxlY3RvciIsImNhbGwiLCJlbCIsInRlbXBsYXRlIiwiYXBwbHkiLCJkb21zIiwiJHN0cmluZzJkb20iLCJIVE1MQ29sbGVjdGlvbiIsIkVycm9yIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiX2NyZWF0ZVZOb2RlIiwiX3VwZGF0ZVZub2RlcyIsImJvZHkiLCJhcHBlbmRDaGlsZCIsInBhcmVudE5vZGUiLCJpbnNlcnRCZWZvcmUiLCJyZW1vdmUiLCJyZW1vdmVDbG9hayIsInN0ciIsInBhcmVudEVsZSIsImNyZWF0ZUVsZW1lbnQiLCJpbm5lckhUTUwiLCJjaGlsZHJlbiIsImxlbmd0aCIsIl9jb21wYXJlIiwiaXNTYW1lIiwiX2NvbXBhcmVDaGlsZHJlbiIsInZub2RlIiwib2xkVm5vZGUiLCJsZW5ndGgyIiwiaSIsImoiLCJvVm4iLCJuVm4iLCJpZCIsImF0dHJzIiwiZGF0YSIsInBhcmVudCIsImZvck5vZGUiLCJnZXRGb3JMb29wVm5vZGUiLCJmIiwiaXRlbSIsImZvckVhY2giLCJjaGlsZCIsImxpc3QiLCJsaXN0S2V5cyIsIk9iamVjdCIsImtleXMiLCJuZWVkQ3JlYXRlIiwiYnJvdGhlclZub2RlIiwiZ2V0SWZWbm9kZSIsImJyb3RoZXJOZWVkQ3JlYXRlIiwiaW5kZXgiLCJzdWJzdHJpbmciLCJ0YWciLCJub2RlTmFtZSIsInRleHQiLCJnZXROb2RlVGV4dCIsImlzVGV4dCIsIm5vZGVUeXBlIiwiaXNDb21tZW50IiwiYXR0cmlidXRlcyIsIml0IiwibG9jYWxOYW1lIiwidmFsdWUiLCJjaGlsZHMiLCJjaGlsZE5vZGVzIiwiY2hpbGRMZW5ndGgiLCJjaGlsZE5vZGUiLCJwdXNoIiwia2V5Iiwib3B0aW9ucyIsImluc3RhbmNlIiwib3B0IiwiX3ZhbGlkYXRvciIsImJlZm9yZUNyZWF0ZSIsImNyZWF0ZWQiLCJiZWZvcmVVcGRhdGUiLCJ1cGRhdGVkIiwiYmVmb3JlTW91bnQiLCJtb3VudGVkIiwid2F0Y2giLCJtZXRob2RzIiwiX3Byb3h5IiwicHJvcCIsImluY2x1ZGVzIiwid2F0Y2hOYW1lIiwibWV0aG9kTmFtZSIsIndhdGNoZXIiLCJwYXJlbnRLZXkiLCJnZXQiLCJ0YXJnZXQiLCJ3YXRjaEtleSIsIl9Vbk9ic2VydmVyUHJvcGVydGllcyIsIlJlZmxlY3QiLCJQcm94eSIsImUiLCJzZXQiLCJvbGRWYWx1ZSIsIm9sZFRhcmdldCIsInVuZGVmaW5lZCIsIkFycmF5IiwiaXNBcnJheSIsImFzc2lnbiIsIl9wYXJzZVdhdGNoS2V5IiwiX29ic2VydmVyIiwiYXJyIiwic3BsaXQiLCJyZXN1bHQiLCJrZXlGaXJzdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxJQUFNQSxRQUFRQyxtQkFBT0EsQ0FBQyxDQUFSLENBQWQ7O0FBRUE7Ozs7SUFHTUMsUTtBQUNMLHFCQUFjO0FBQUE7O0FBQ2IsT0FBS0MsR0FBTCxHQUFXLElBQVg7QUFDQSxPQUFLQyxNQUFMLEdBQWMsSUFBZDtBQUNBLE9BQUtDLE1BQUwsR0FBYyxJQUFkO0FBQ0EsT0FBS0MsTUFBTCxHQUFjLElBQWQ7QUFDQSxPQUFLQyxZQUFMLEdBQW9CLElBQXBCO0FBQ0EsT0FBS0MsUUFBTCxHQUFnQixJQUFoQjtBQUNBLE9BQUtDLGFBQUwsR0FBcUIsSUFBckI7QUFDQSxPQUFLQyxRQUFMLEdBQWdCLElBQWhCO0FBQ0EsT0FBS0MsUUFBTCxHQUFnQixJQUFoQjtBQUNBLE9BQUtDLGFBQUwsR0FBcUIsSUFBckI7QUFDQSxPQUFLQyxTQUFMLEdBQWlCLElBQWpCO0FB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Q0E7QUFDRCtFLGVBQVd2QyxHQUFYO0FBQ0FzQyxXQUFPdkMsSUFBUCxDQUFZQyxHQUFaO0FBQ0E7QUFDRCxVQUFPc0MsTUFBUDtBQUNBOzs7Ozs7QUFJRkUsT0FBT0MsT0FBUCxHQUFpQjVILFFBQWpCIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBWTm9kZSA9IHJlcXVpcmUoJy4vVk5vZGUuanMnKVxyXG5cclxuLyoqXHJcbiAqIOWTjeW6lOW8j01WVk3lr7nosaFcclxuICovXHJcbmNsYXNzIFJlYWN0aXZlIHtcclxuXHRjb25zdHJ1Y3RvcigpIHtcclxuXHRcdHRoaXMuJGVsID0gbnVsbDtcclxuXHRcdHRoaXMuJHZub2RlID0gbnVsbDtcclxuXHRcdHRoaXMuX3Zub2RlID0gbnVsbDtcclxuXHRcdHRoaXMuJHdhdGNoID0gbnVsbDtcclxuXHRcdHRoaXMuJGJlZm9yZU1vdW50ID0gbnVsbDtcclxuXHRcdHRoaXMuJG1vdW50ZWQgPSBudWxsO1xyXG5cdFx0dGhpcy4kYmVmb3JlQ3JlYXRlID0gbnVsbDtcclxuXHRcdHRoaXMuJGNyZWF0ZWQgPSBudWxsO1xyXG5cdFx0dGhpcy4kdXBkYXRlZCA9IG51bGw7XHJcblx0XHR0aGlzLiRiZWZvcmVVcGRhdGUgPSBudWxsO1xyXG5cdFx0dGhpcy4kdGVtcGxhdGUgPSBudWxsO1xyXG5cdH1cclxuXHJcblx0LyoqXHJcblx0ICog5a6e5L6L5pa55rOV77ya5oyC6L295Yiw5oyH5a6a6IqC54K5XHJcblx0ICogQHBhcmFtIHtPYmplY3R9IHNlbGVjdG9yXHJcblx0ICovXHJcblx0bW91bnQoc2VsZWN0b3IpIHtcclxuXHRcdGlmICh0eXBlb2YgdGhpcy4kYmVmb3JlTW91bnQgPT0gJ2Z1bmN0aW9uJykge1xyXG5cdFx0XHR0aGlzLiRiZWZvcmVNb3VudC5jYWxsKHRoaXMpXHJcblx0XHR9XHJcblx0XHRsZXQgZWwgPSBudWxsO1xyXG5cdFx0Ly/lpoLmnpzmmK/mqKHmnb9cclxuXHRcdGlmKCh0eXBlb2YgdGhpcy4kdGVtcGxhdGUgPT0gJ3N0cmluZycgfHwgdHlwZW9mIHRoaXMuJHRlbXBsYXRlID09ICdmdW5jdGlvbicpICYmIHRoaXMuJHRlbXBsYXRlKXtcclxuXHRcdFx0bGV0IHRlbXBsYXRlID0gJyc7XHJcblx0XHRcdGlmKHR5cGVvZiB0aGlzLiR0ZW1wbGF0ZSA9PSAnZnVuY3Rpb24nKXtcclxuXHRcdFx0XHR0ZW1wbGF0ZSA9IHRoaXMuJHRlbXBsYXRlLmFwcGx5KHRoaXMpXHJcblx0XHRcdH1lbHNlIHtcclxuXHRcdFx0XHR0ZW1wbGF0ZSA9IHRoaXMuJHRlbXBsYXRlO1xyXG5cdFx0XHR9XHJcblx0XHRcdGxldCBkb21zID0gdGhpcy4kc3RyaW5nMmRvbSh0ZW1wbGF0ZSk7XHJcblx0XHRcdGlmKGRvbXMgaW5zdGFuY2VvZiBIVE1MQ29sbGVjdGlvbil7XHJcblx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKCd0ZW1wbGF0ZSBzaG91bGQgYmUgYSBzdHJpbmcgb2Ygb25lIEhUTUwgdGFnJylcclxuXHRcdFx0fVxyXG5cdFx0XHRlbCA9IGRvbXM7XHJcblx0XHR9ZWxzZSB7Ly/mjILovb3lhYPntKBcclxuXHRcdFx0Ly/ojrflj5bmjILovb3lhYPntKBcclxuXHRcdFx0ZWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKVxyXG5cdFx0XHRpZiAoIWVsKSB7XHJcblx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKFxyXG5cdFx0XHRcdFx0J1RoZSBhcmd1bWVudCB0byB0aGUgbW91bnQgbWV0aG9kIG11c3QgYmUgZG9tIHNlbGVjdG9ycyBhbmQgdGhlIERPTSB0aGF0IGlzIHBvaW50ZWQgdG8gY2Fubm90IGJlIGVtcHR5JylcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0XHJcblx0XHQvL+WIm+W7uuiZmuaLn+iKgueCuVxyXG5cdFx0dGhpcy4kdm5vZGUgPSB0aGlzLl9jcmVhdGVWTm9kZShlbClcclxuXHRcdHRoaXMuX3Zub2RlID0gdGhpcy5fY3JlYXRlVk5vZGUoZWwpXHJcblx0XHQvL+WIm+W7uuecn+WunmRvbVxyXG5cdFx0dGhpcy5fdXBkYXRlVm5vZGVzKHRoaXMuJHZub2RlKVxyXG5cdFx0dGhpcy5fdXBkYXRlVm5vZGVzKHRoaXMuX3Zub2RlKVxyXG5cdFx0Ly/lpoLmnpzmmK/mqKHmnb/vvIznm7TmjqXmt7vliqBcclxuXHRcdGlmKHRoaXMuJHRlbXBsYXRlKXtcclxuXHRcdFx0ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0aGlzLl92bm9kZS5lbClcclxuXHRcdH1lbHNlIHtcclxuXHRcdFx0ZWwucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodGhpcy5fdm5vZGUuZWwsIGVsKTtcclxuXHRcdFx0ZWwucmVtb3ZlKCk7XHJcblx0XHR9XHJcblx0XHQvL+enu+mZpGxrLWNsb2FrXHJcblx0XHR0aGlzLiR2bm9kZS5yZW1vdmVDbG9haygpO1xyXG5cdFx0dGhpcy5fdm5vZGUucmVtb3ZlQ2xvYWsoKTtcclxuXHRcdGlmICh0eXBlb2YgdGhpcy4kbW91bnRlZCA9PSAnZnVuY3Rpb24nKSB7XHJcblx0XHRcdHRoaXMuJG1vdW50ZWQuY2FsbCh0aGlzKVxyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHRoaXM7XHJcblx0fVxyXG5cdFxyXG5cdC8qKlxyXG5cdCAqIOagueaNruWtl+espuS4sueUn+aIkGRvbVxyXG5cdCAqIEBwYXJhbSB7T2JqZWN0fSBzdHJcclxuXHQgKi9cclxuXHQkc3RyaW5nMmRvbShzdHIpe1xyXG5cdFx0aWYgKHR5cGVvZihzdHIpICE9IFwic3RyaW5nXCIpIHtcclxuXHRcdFx0c3RyID0gXCJcIjtcclxuXHRcdH1cclxuXHRcdHZhciBwYXJlbnRFbGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG5cdFx0cGFyZW50RWxlLmlubmVySFRNTCA9IHN0cjtcclxuXHRcdGlmIChwYXJlbnRFbGUuY2hpbGRyZW4ubGVuZ3RoID09IDEpIHtcclxuXHRcdFx0cmV0dXJuIHBhcmVudEVsZS5jaGlsZHJlblswXTtcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdHJldHVybiBwYXJlbnRFbGUuY2hpbGRyZW47XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiDlvLrliLbmm7TmlrDop4blm75cclxuXHQgKi9cclxuXHQkZm9yY2VVcGRhdGUoKXtcclxuXHRcdHRoaXMuX3VwZGF0ZVZub2Rlcyh0aGlzLiR2bm9kZSlcclxuXHRcdHRoaXMuX2NvbXBhcmUoKTtcclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIOavlOWvueaWsOaXp+iKgueCueaVsOaNrlxyXG5cdCAqL1xyXG5cdF9jb21wYXJlKCkge1xyXG5cdFx0aWYgKCF0aGlzLiR2bm9kZS5pc1NhbWUodGhpcy5fdm5vZGUpKSB7XHJcblx0XHRcdGxldCBlbCA9IHRoaXMuX3Zub2RlLmVsO1xyXG5cdFx0XHR0aGlzLl91cGRhdGVWbm9kZXModGhpcy5fdm5vZGUpO1xyXG5cdFx0XHRlbC5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0aGlzLl92bm9kZS5lbCwgZWwpXHJcblx0XHRcdGVsLnJlbW92ZSgpXHJcblx0XHRcdHRoaXMuJGVsID0gdGhpcy5fdm5vZGUuZWw7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHR0aGlzLl9jb21wYXJlQ2hpbGRyZW4odGhpcy4kdm5vZGUsIHRoaXMuX3Zub2RlKVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0LyoqXHJcblx0ICog5q+U5a+55a2Q5a2Z6IqC54K55paw5pen5pWw5o2uXHJcblx0ICovXHJcblx0X2NvbXBhcmVDaGlsZHJlbih2bm9kZSwgb2xkVm5vZGUpIHtcclxuXHRcdHZhciBsZW5ndGggPSBvbGRWbm9kZS5jaGlsZHJlbi5sZW5ndGg7XHJcblx0XHR2YXIgbGVuZ3RoMiA9IHZub2RlLmNoaWxkcmVuLmxlbmd0aDtcclxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0Zm9yICh2YXIgaiA9IDA7IGogPCBsZW5ndGgyOyBqKyspIHtcclxuXHRcdFx0XHR2YXIgb1ZuID0gb2xkVm5vZGUuY2hpbGRyZW5baV0gLy/lvZPliY3ml6foioLngrlcclxuXHRcdFx0XHR2YXIgblZuID0gdm5vZGUuY2hpbGRyZW5bal07IC8v5b2T5YmN6IqC54K5XHJcblx0XHRcdFx0aWYgKCFuVm4uaXNTYW1lKG9WbikgJiYgblZuLmlkID09PSBvVm4uaWQpIHtcclxuXHRcdFx0XHRcdGlmIChvVm4uYXR0cnNbJ2xrOmlmJ10pIHtcclxuXHRcdFx0XHRcdFx0aWYgKG9Wbi5kYXRhWyckYXR0cnMnXVsnbGs6aWYnXSkgeyAvL+aXp+iKgueCueWOn+WFiOW3sua4suafk1xyXG5cdFx0XHRcdFx0XHRcdGlmIChuVm4uYXR0cnNbJ2xrOmlmJ10pIHsgLy/mlrDnu5PngrlcclxuXHRcdFx0XHRcdFx0XHRcdGlmICghblZuLmRhdGFbJyRhdHRycyddWydsazppZiddKSB7IC8v5paw57uT54K55pyq5riy5p+TXHJcblx0XHRcdFx0XHRcdFx0XHRcdGxldCBlbCA9IG9Wbi5wYXJlbnQuZWw7XHJcblx0XHRcdFx0XHRcdFx0XHRcdHRoaXMuX3VwZGF0ZVZub2RlcyhvVm4ucGFyZW50KTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0ZWwucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUob1ZuLnBhcmVudC5lbCwgZWwpXHJcblx0XHRcdFx0XHRcdFx0XHRcdGVsLnJlbW92ZSgpXHJcblx0XHRcdFx0XHRcdFx0XHRcdHJldHVybjtcclxuXHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdH0gZWxzZSB7IC8v5pen6IqC54K55Y6f5YWI5pyq5riy5p+TXHJcblx0XHRcdFx0XHRcdFx0aWYgKG5Wbi5hdHRyc1snbGs6aWYnXSkgeyAvL+aWsOe7k+eCuVxyXG5cdFx0XHRcdFx0XHRcdFx0aWYgKG5Wbi5kYXRhWyckYXR0cnMnXVsnbGs6aWYnXSkgeyAvL+aWsOe7k+eCueW3sua4suafk1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRsZXQgZWwgPSBvVm4ucGFyZW50LmVsO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHR0aGlzLl91cGRhdGVWbm9kZXMob1ZuLnBhcmVudCk7XHJcblx0XHRcdFx0XHRcdFx0XHRcdGVsLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKG9Wbi5wYXJlbnQuZWwsIGVsKVxyXG5cdFx0XHRcdFx0XHRcdFx0XHRlbC5yZW1vdmUoKVxyXG5cdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm47XHJcblx0XHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR2YXIgZm9yTm9kZSA9IG9Wbi5nZXRGb3JMb29wVm5vZGUoKVxyXG5cdFx0XHRcdFx0aWYgKGZvck5vZGUpIHtcclxuXHRcdFx0XHRcdFx0bGV0IGVsID0gZm9yTm9kZS5wYXJlbnQuZWw7XHJcblx0XHRcdFx0XHRcdHRoaXMuX3VwZGF0ZVZub2Rlcyhmb3JOb2RlLnBhcmVudClcclxuXHRcdFx0XHRcdFx0ZWwucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZm9yTm9kZS5wYXJlbnQuZWwsIGVsKVxyXG5cdFx0XHRcdFx0XHRlbC5yZW1vdmUoKVxyXG5cdFx0XHRcdFx0XHRyZXR1cm47XHJcblx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0bGV0IGVsID0gb1ZuLmVsO1xyXG5cdFx0XHRcdFx0dGhpcy5fdXBkYXRlVm5vZGVzKG9WbilcclxuXHRcdFx0XHRcdGVsLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKG9Wbi5lbCwgZWwpXHJcblx0XHRcdFx0XHRlbC5yZW1vdmUoKVxyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHR0aGlzLl9jb21wYXJlQ2hpbGRyZW4oblZuLCBvVm4pXHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiDmm7TmlrDomZrmi5/oioLngrnmlbDmja5cclxuXHQgKi9cclxuXHRfdXBkYXRlVm5vZGVzKHZub2RlKSB7XHJcblx0XHQvL+agueaNruiZmuaLn2RvbemAkuW9kuWIm+W7uuecn+WunuiKgueCueS7peWPiuWFtuWtkOiKgueCue+8iOabtOaWsOiZmuaLn2RvbeeahGVs77yJXHJcblx0XHR2bm9kZS5jcmVhdGVFbGVtZW50KHRoaXMpXHJcblx0XHQvL+WwhuiZmuaLn2RvbeeahGVs5aGr5YWF5Yiw54i25YWD57Sg55qEZWzkuK1cclxuXHRcdGxldCBmID0gKGl0ZW0pID0+IHtcclxuXHRcdFx0aXRlbS5jaGlsZHJlbi5mb3JFYWNoKGNoaWxkID0+IHtcclxuXHRcdFx0XHRpZiAoY2hpbGQuYXR0cnNbJ2xrOmZvciddKSB7XHJcblx0XHRcdFx0XHR2YXIgbGlzdCA9IGNoaWxkLmRhdGFbJyRhdHRycyddWydsazpmb3InXTtcclxuXHRcdFx0XHRcdGxldCBsaXN0S2V5cyA9IE9iamVjdC5rZXlzKGxpc3QpXHJcblx0XHRcdFx0XHRpZiAobGlzdEtleXMubGVuZ3RoID09IDApIHtcclxuXHRcdFx0XHRcdFx0Y2hpbGQuZWwucmVtb3ZlKCk7XHJcblx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRpZiAoY2hpbGQuYXR0cnNbJ2xrOmlmJ10pIHtcclxuXHRcdFx0XHRcdFx0XHRsZXQgbmVlZENyZWF0ZSA9IGNoaWxkLmRhdGFbJyRhdHRycyddWydsazppZiddO1xyXG5cdFx0XHRcdFx0XHRcdGlmIChuZWVkQ3JlYXRlKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRpdGVtLmVsLmFwcGVuZENoaWxkKGNoaWxkLmVsKVxyXG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRcdFx0XHRjaGlsZC5lbC5yZW1vdmUoKVxyXG5cdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0fSBlbHNlIGlmIChjaGlsZC5hdHRyc1snbGs6ZWxzZSddKSB7XHJcblx0XHRcdFx0XHRcdFx0dmFyIGJyb3RoZXJWbm9kZSA9IGNoaWxkLmdldElmVm5vZGUoKVxyXG5cdFx0XHRcdFx0XHRcdGlmIChicm90aGVyVm5vZGUpIHtcclxuXHRcdFx0XHRcdFx0XHRcdGxldCBicm90aGVyTmVlZENyZWF0ZSA9IGJyb3RoZXJWbm9kZS5kYXRhWyckYXR0cnMnXVsnbGs6aWYnXTtcclxuXHRcdFx0XHRcdFx0XHRcdGlmIChicm90aGVyTmVlZENyZWF0ZSkge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRjaGlsZC5lbC5yZW1vdmUoKVxyXG5cdFx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0aXRlbS5lbC5hcHBlbmRDaGlsZChjaGlsZC5lbClcclxuXHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKCdsazplbHNlIG11c3QgYmUgY29tYmluZWQgd2l0aCBsazppZicpXHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRcdGl0ZW0uZWwuYXBwZW5kQ2hpbGQoY2hpbGQuZWwpXHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9IGVsc2UgaWYgKGNoaWxkLmF0dHJzWydsazppZiddKSB7XHJcblx0XHRcdFx0XHRsZXQgbmVlZENyZWF0ZSA9IGNoaWxkLmRhdGFbJyRhdHRycyddWydsazppZiddO1xyXG5cdFx0XHRcdFx0aWYgKG5lZWRDcmVhdGUpIHtcclxuXHRcdFx0XHRcdFx0aXRlbS5lbC5hcHBlbmRDaGlsZChjaGlsZC5lbClcclxuXHRcdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRcdGNoaWxkLmVsLnJlbW92ZSgpXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSBlbHNlIGlmIChjaGlsZC5hdHRyc1snbGs6ZWxzZSddKSB7XHJcblx0XHRcdFx0XHR2YXIgYnJvdGhlclZub2RlID0gY2hpbGQuZ2V0SWZWbm9kZSgpXHJcblx0XHRcdFx0XHRpZiAoYnJvdGhlclZub2RlKSB7XHJcblx0XHRcdFx0XHRcdGxldCBicm90aGVyTmVlZENyZWF0ZSA9IGJyb3RoZXJWbm9kZS5kYXRhWyckYXR0cnMnXVsnbGs6aWYnXTtcclxuXHRcdFx0XHRcdFx0aWYgKGJyb3RoZXJOZWVkQ3JlYXRlKSB7XHJcblx0XHRcdFx0XHRcdFx0Y2hpbGQuZWwucmVtb3ZlKClcclxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0XHRpdGVtLmVsLmFwcGVuZENoaWxkKGNoaWxkLmVsKVxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoJ2xrOmVsc2UgbXVzdCBiZSBjb21iaW5lZCB3aXRoIGxrOmlmJylcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0aXRlbS5lbC5hcHBlbmRDaGlsZChjaGlsZC5lbClcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdGYoY2hpbGQpXHJcblx0XHRcdH0pXHJcblx0XHR9XHJcblx0XHRmKHZub2RlKVxyXG5cdH1cclxuXHJcblx0LyoqXHJcblx0ICog5Yib5bu66Jma5oufZG9tXHJcblx0ICovXHJcblx0X2NyZWF0ZVZOb2RlKGVsLCBpbmRleCwgcGFyZW50KSB7XHJcblx0XHRpbmRleCA9IGluZGV4ID8gYCR7aW5kZXh9YCA6IDBcclxuXHRcdGxldCBpZCA9IHBhcmVudCA/ICd2bl8nICsgKHBhcmVudC5pZC5zdWJzdHJpbmcoMykpICsgJ18nICsgaW5kZXggOiAndm5fJyArIGluZGV4O1xyXG5cdFx0bGV0IHRhZyA9IGVsLm5vZGVOYW1lO1xyXG5cdFx0bGV0IGF0dHJzID0ge307XHJcblx0XHRsZXQgZGF0YSA9IHt9O1xyXG5cdFx0bGV0IHRleHQgPSBWTm9kZS5nZXROb2RlVGV4dChlbClcclxuXHRcdGxldCBjaGlsZHJlbiA9IFtdO1xyXG5cdFx0bGV0IGlzVGV4dCA9IChlbC5ub2RlVHlwZSA9PSAzKTtcclxuXHRcdGxldCBpc0NvbW1lbnQgPSAoZWwubm9kZVR5cGUgPT0gOCk7XHJcblx0XHRpZiAoZWwuYXR0cmlidXRlcykge1xyXG5cdFx0XHRsZXQgbGVuZ3RoID0gZWwuYXR0cmlidXRlcy5sZW5ndGg7XHJcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0XHRsZXQgaXQgPSBlbC5hdHRyaWJ1dGVzW2ldO1xyXG5cdFx0XHRcdC8v5bGe5oCn5ZCNXHJcblx0XHRcdFx0bGV0IGxvY2FsTmFtZSA9IGl0LmxvY2FsTmFtZTtcclxuXHRcdFx0XHQvL+WxnuaAp+WAvFxyXG5cdFx0XHRcdGxldCB2YWx1ZSA9IGl0LnZhbHVlO1xyXG5cdFx0XHRcdGF0dHJzW2xvY2FsTmFtZV0gPSB2YWx1ZTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdGxldCB2bm9kZSA9IG5ldyBWTm9kZShpZCwgdGFnLCBhdHRycywgZGF0YSwgdGV4dCwgY2hpbGRyZW4sIHBhcmVudCwgaXNUZXh0LCBpc0NvbW1lbnQpO1xyXG5cdFx0Ly/ojrflj5blrZDoioLngrlcclxuXHRcdGxldCBjaGlsZHMgPSBlbC5jaGlsZE5vZGVzO1xyXG5cdFx0bGV0IGNoaWxkTGVuZ3RoID0gY2hpbGRzLmxlbmd0aDtcclxuXHRcdC8vIOa3seW6puS8mOWFiOeul+azlVxyXG5cdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCBjaGlsZExlbmd0aDsgaSsrKSB7XHJcblx0XHRcdGxldCBjaGlsZE5vZGUgPSB0aGlzLl9jcmVhdGVWTm9kZShjaGlsZHNbaV0sIGksIHZub2RlKTtcclxuXHRcdFx0dm5vZGUuY2hpbGRyZW4ucHVzaChjaGlsZE5vZGUpO1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHZub2RlO1xyXG5cdH1cclxuXHJcblx0LyoqXHJcblx0ICog55uR5ZCs5pWw5o2u5Y+Y5pu06L+b6KGM5aSE55CGXHJcblx0ICogQHBhcmFtIHtPYmplY3R9IGtleXNcclxuXHQgKiBAcGFyYW0ge09iamVjdH0ga2V5XHJcblx0ICogQHBhcmFtIHtPYmplY3R9IHZhbHVlXHJcblx0ICovXHJcblx0X29ic2VydmVyKGtleXMsIGtleSwgdmFsdWUpIHtcclxuXHRcdGlmICh0aGlzLiR2bm9kZSkge1xyXG5cdFx0XHR0aGlzLl91cGRhdGVWbm9kZXModGhpcy4kdm5vZGUpXHJcblx0XHRcdHRoaXMuX2NvbXBhcmUoKTtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIOWIm+W7uuS4gOS4qlJlYWN0aXZl55qEUHJveHnlr7nosaFcclxuXHQgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xyXG5cdCAqL1xyXG5cdHN0YXRpYyBjcmVhdGVBcHAob3B0aW9ucykge1xyXG5cdFx0Ly/liJ3lp4vljJbliJvlu7rkuIDkuKrlrp7kvotcclxuXHRcdGxldCBpbnN0YW5jZSA9IG5ldyBSZWFjdGl2ZSgpXHJcblx0XHQvL+agoemqjOWPguaVsFxyXG5cdFx0bGV0IG9wdCA9IFJlYWN0aXZlLl92YWxpZGF0b3Iob3B0aW9ucylcclxuXHRcdC8v6YWN572udGVtcGxhdGVcclxuXHRcdGluc3RhbmNlLiR0ZW1wbGF0ZSA9IG9wdC50ZW1wbGF0ZTtcclxuXHRcdC8v6YWN572u6ZKp5a2Q5Ye95pWwXHJcblx0XHRpbnN0YW5jZS4kYmVmb3JlQ3JlYXRlID0gb3B0LmJlZm9yZUNyZWF0ZTtcclxuXHRcdGluc3RhbmNlLiRjcmVhdGVkID0gb3B0LmNyZWF0ZWQ7XHJcblx0XHRpbnN0YW5jZS4kYmVmb3JlVXBkYXRlID0gb3B0LmJlZm9yZVVwZGF0ZTtcclxuXHRcdGluc3RhbmNlLiR1cGRhdGVkID0gb3B0LnVwZGF0ZWQ7XHJcblx0XHRpbnN0YW5jZS4kYmVmb3JlTW91bnQgPSBvcHQuYmVmb3JlTW91bnRcclxuXHRcdGluc3RhbmNlLiRtb3VudGVkID0gb3B0Lm1vdW50ZWQ7XHJcblx0XHQvL+aJp+ihjOmSqeWtkOWHveaVsGJlZm9yZUNyZWF0ZVxyXG5cdFx0aW5zdGFuY2UuJGJlZm9yZUNyZWF0ZS5jYWxsKGluc3RhbmNlKVxyXG5cdFx0Ly/phY3nva53YXRjaOebkeWQrOWPguaVsFxyXG5cdFx0aW5zdGFuY2UuJHdhdGNoID0gb3B0LndhdGNoO1xyXG5cdFx0Ly/lsIZkYXRh55u05o6l5oyC6L295Zyo5a6e5L6L5LiKXHJcblx0XHRPYmplY3Qua2V5cyhvcHQuZGF0YSkuZm9yRWFjaChrZXkgPT4ge1xyXG5cdFx0XHRpZiAoaW5zdGFuY2Vba2V5XSkge1xyXG5cdFx0XHRcdHRocm93IG5ldyBFcnJvcihgJHtrZXl9IGlzIGFscmVhZHkgZGVmaW5lZCBpbiB0aGUgaW5zdGFuY2VgKVxyXG5cdFx0XHR9XHJcblx0XHRcdGluc3RhbmNlW2tleV0gPSBvcHQuZGF0YVtrZXldXHJcblx0XHR9KVxyXG5cdFx0Ly/lsIZtZXRob2Rz55u05o6l5oyC6L295Zyo5a6e5L6L5LiKXHJcblx0XHRPYmplY3Qua2V5cyhvcHQubWV0aG9kcykuZm9yRWFjaChrZXkgPT4ge1xyXG5cdFx0XHRpZiAoaW5zdGFuY2Vba2V5XSkge1xyXG5cdFx0XHRcdHRocm93IG5ldyBFcnJvcihgJHtrZXl9IGlzIGFscmVhZHkgZGVmaW5lZCBpbiB0aGUgaW5zdGFuY2VgKVxyXG5cdFx0XHR9XHJcblx0XHRcdGluc3RhbmNlW2tleV0gPSBvcHQubWV0aG9kc1trZXldXHJcblx0XHR9KVxyXG5cdFx0Ly/ov5vooYxwcm94eeS7o+eQhlxyXG5cdFx0aW5zdGFuY2UgPSBSZWFjdGl2ZS5fcHJveHkoaW5zdGFuY2UpXHJcblx0XHQvL+aJp+ihjOmSqeWtkOWHveaVsGNyZWF0ZWRcclxuXHRcdGluc3RhbmNlLiRjcmVhdGVkLmNhbGwoaW5zdGFuY2UpXHJcblx0XHQvL+i/lOWbnuWunuS+i1xyXG5cdFx0cmV0dXJuIGluc3RhbmNlXHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiDliKTmlq1yZWFjdGl2ZeS4reeahOaMh+WumuWxnuaAp+aYr+WQpuS4jemcgOimgeebkeWQrFxyXG5cdCAqIEBwYXJhbSB7T2JqZWN0fSBwcm9wXHJcblx0ICog5LiN6ZyA6KaB55uR5ZCs6L+U5ZuedHJ1Ze+8jOmcgOimgeebkeWQrOi/lOWbnmZhbHNlXHJcblx0ICovXHJcblx0c3RhdGljIF9Vbk9ic2VydmVyUHJvcGVydGllcyhwcm9wKSB7XHJcblx0XHRyZXR1cm4gWyckZWwnLCAnJHZub2RlJywgJ192bm9kZScsICckd2F0Y2gnLCAnbW91bnQnLCAnX29ic2VydmVyJywgJyRiZWZvcmVDcmVhdGUnLCAnJGNyZWF0ZWQnLCAnJGJlZm9yZU1vdW50JyxcclxuXHRcdFx0JyRtb3VudGVkJyxcclxuXHRcdFx0JyRiZWZvcmVVcGRhdGUnLCAnJHVwZGF0ZWQnLCckdGVtcGxhdGUnXHJcblx0XHRdLmluY2x1ZGVzKHByb3ApXHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiDmo4DpqoxvcHRpb25z5Y+C5pWwXHJcblx0ICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnNcclxuXHQgKi9cclxuXHRzdGF0aWMgX3ZhbGlkYXRvcihvcHRpb25zKSB7XHJcblx0XHRsZXQgb3B0ID0ge1xyXG5cdFx0XHRkYXRhOiB7fSxcclxuXHRcdFx0d2F0Y2g6IHt9LFxyXG5cdFx0XHRtZXRob2RzOiB7fSxcclxuXHRcdFx0YmVmb3JlQ3JlYXRlOiBmdW5jdGlvbigpIHt9LFxyXG5cdFx0XHRjcmVhdGVkOiBmdW5jdGlvbigpIHt9LFxyXG5cdFx0XHRiZWZvcmVNb3VudDogZnVuY3Rpb24oKSB7fSxcclxuXHRcdFx0bW91bnRlZDogZnVuY3Rpb24oKSB7fSxcclxuXHRcdFx0YmVmb3JlVXBkYXRlOiBmdW5jdGlvbigpIHt9LFxyXG5cdFx0XHR1cGRhdGVkOiBmdW5jdGlvbigpIHt9LFxyXG5cdFx0XHR0ZW1wbGF0ZTpudWxsXHJcblx0XHR9XHJcblx0XHRpZiAodHlwZW9mIG9wdGlvbnMgPT0gJ29iamVjdCcgJiYgb3B0aW9ucykge1xyXG5cdFx0XHRpZiAodHlwZW9mIG9wdGlvbnMuZGF0YSA9PSAnb2JqZWN0JyAmJiBvcHRpb25zLmRhdGEpIHtcclxuXHRcdFx0XHRvcHQuZGF0YSA9IG9wdGlvbnMuZGF0YTtcclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAodHlwZW9mIG9wdGlvbnMud2F0Y2ggPT0gJ29iamVjdCcgJiYgb3B0aW9ucy53YXRjaCkge1xyXG5cdFx0XHRcdE9iamVjdC5rZXlzKG9wdGlvbnMud2F0Y2gpLmZvckVhY2god2F0Y2hOYW1lID0+IHtcclxuXHRcdFx0XHRcdGlmICgodHlwZW9mIG9wdGlvbnMud2F0Y2hbd2F0Y2hOYW1lXSAhPSAnZnVuY3Rpb24nKSB8fCAhb3B0aW9ucy53YXRjaFt3YXRjaE5hbWVdKSB7XHJcblx0XHRcdFx0XHRcdHRocm93IG5ldyBFcnJvcihgVGhlIGRlZmluaXRpb24gb2YgXCIke3dhdGNoTmFtZX1cIiBpbiB3YXRjaCBzaG91bGQgYmUgYSBmdW5jdGlvbmApXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSlcclxuXHRcdFx0XHRvcHQud2F0Y2ggPSBvcHRpb25zLndhdGNoO1xyXG5cdFx0XHR9XHJcblx0XHRcdGlmICh0eXBlb2Ygb3B0aW9ucy5tZXRob2RzID09ICdvYmplY3QnICYmIG9wdGlvbnMubWV0aG9kcykge1xyXG5cdFx0XHRcdE9iamVjdC5rZXlzKG9wdGlvbnMubWV0aG9kcykuZm9yRWFjaChtZXRob2ROYW1lID0+IHtcclxuXHRcdFx0XHRcdGlmICgodHlwZW9mIG9wdGlvbnMubWV0aG9kc1ttZXRob2ROYW1lXSAhPSAnZnVuY3Rpb24nKSB8fCAhb3B0aW9ucy5tZXRob2RzW21ldGhvZE5hbWVdKSB7XHJcblx0XHRcdFx0XHRcdHRocm93IG5ldyBFcnJvcihgVGhlIGRlZmluaXRpb24gb2YgXCIke21ldGhvZE5hbWV9XCIgaW4gbWV0aG9kcyBzaG91bGQgYmUgYSBmdW5jdGlvbmApXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSlcclxuXHRcdFx0XHRvcHQubWV0aG9kcyA9IG9wdGlvbnMubWV0aG9kcztcclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAodHlwZW9mIG9wdGlvbnMuYmVmb3JlTW91bnQgPT0gJ2Z1bmN0aW9uJyAmJiBvcHRpb25zLmJlZm9yZU1vdW50KSB7XHJcblx0XHRcdFx0b3B0LmJlZm9yZU1vdW50ID0gb3B0aW9ucy5iZWZvcmVNb3VudDtcclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAodHlwZW9mIG9wdGlvbnMubW91bnRlZCA9PSAnZnVuY3Rpb24nICYmIG9wdGlvbnMubW91bnRlZCkge1xyXG5cdFx0XHRcdG9wdC5tb3VudGVkID0gb3B0aW9ucy5tb3VudGVkO1xyXG5cdFx0XHR9XHJcblx0XHRcdGlmICh0eXBlb2Ygb3B0aW9ucy5iZWZvcmVDcmVhdGUgPT0gJ2Z1bmN0aW9uJyAmJiBvcHRpb25zLmJlZm9yZUNyZWF0ZSkge1xyXG5cdFx0XHRcdG9wdC5iZWZvcmVDcmVhdGUgPSBvcHRpb25zLmJlZm9yZUNyZWF0ZTtcclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAodHlwZW9mIG9wdGlvbnMuY3JlYXRlZCA9PSAnZnVuY3Rpb24nICYmIG9wdGlvbnMuY3JlYXRlZCkge1xyXG5cdFx0XHRcdG9wdC5jcmVhdGVkID0gb3B0aW9ucy5jcmVhdGVkO1xyXG5cdFx0XHR9XHJcblx0XHRcdGlmICh0eXBlb2Ygb3B0aW9ucy5iZWZvcmVVcGRhdGUgPT0gJ2Z1bmN0aW9uJyAmJiBvcHRpb25zLmJlZm9yZVVwZGF0ZSkge1xyXG5cdFx0XHRcdG9wdC5iZWZvcmVVcGRhdGUgPSBvcHRpb25zLmJlZm9yZVVwZGF0ZTtcclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAodHlwZW9mIG9wdGlvbnMudXBkYXRlZCA9PSAnZnVuY3Rpb24nICYmIG9wdGlvbnMudXBkYXRlZCkge1xyXG5cdFx0XHRcdG9wdC51cGRhdGVkID0gb3B0aW9ucy51cGRhdGVkO1xyXG5cdFx0XHR9XHJcblx0XHRcdGlmICgodHlwZW9mIG9wdGlvbnMudGVtcGxhdGUgPT0gJ3N0cmluZycgfHwgdHlwZW9mIG9wdGlvbnMudGVtcGxhdGUgPT0gJ2Z1bmN0aW9uJykgJiYgb3B0aW9ucy50ZW1wbGF0ZSl7XHJcblx0XHRcdFx0b3B0LnRlbXBsYXRlID0gb3B0aW9ucy50ZW1wbGF0ZTtcclxuXHRcdFx0fVxyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0dGhyb3cgbmV3IEVycm9yKFwiVGhlIGFyZ3VtZW50IHRvIHRoZSAnY3JlYXRlQXBwJyBtZXRob2QgbXVzdCBiZSBhbiBvYmplY3RcIilcclxuXHRcdH1cclxuXHRcdHJldHVybiBvcHRcclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIHByb3h55Luj55CG5a6e5L6LXHJcblx0ICogQHBhcmFtIHtPYmplY3R9IGluc3RhbmNlXHJcblx0ICovXHJcblx0c3RhdGljIF9wcm94eShpbnN0YW5jZSkge1xyXG5cdFx0bGV0IHdhdGNoZXIgPSAocGFyZW50S2V5KSA9PiB7XHJcblx0XHRcdHJldHVybiB7XHJcblx0XHRcdFx0Z2V0OiAodGFyZ2V0LCBrZXkpID0+IHtcclxuXHRcdFx0XHRcdHRyeSB7XHJcblx0XHRcdFx0XHRcdHZhciB3YXRjaEtleSA9IHBhcmVudEtleSA/IHBhcmVudEtleSArICcuJyArIGtleSA6IGtleTtcclxuXHRcdFx0XHRcdFx0aWYgKFJlYWN0aXZlLl9Vbk9ic2VydmVyUHJvcGVydGllcyhrZXkpKSB7XHJcblx0XHRcdFx0XHRcdFx0cmV0dXJuIFJlZmxlY3QuZ2V0KHRhcmdldCwga2V5KVxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdHJldHVybiBuZXcgUHJveHkodGFyZ2V0W2tleV0sIHdhdGNoZXIod2F0Y2hLZXkpKVxyXG5cdFx0XHRcdFx0fSBjYXRjaCAoZSkge1xyXG5cdFx0XHRcdFx0XHRyZXR1cm4gUmVmbGVjdC5nZXQodGFyZ2V0LCBrZXkpXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSxcclxuXHRcdFx0XHRzZXQ6ICh0YXJnZXQsIGtleSwgdmFsdWUpID0+IHtcclxuXHRcdFx0XHRcdGlmIChSZWFjdGl2ZS5fVW5PYnNlcnZlclByb3BlcnRpZXMoa2V5KSkge1xyXG5cdFx0XHRcdFx0XHRSZWZsZWN0LnNldCh0YXJnZXQsIGtleSwgdmFsdWUpO1xyXG5cdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdHZhciB3YXRjaEtleSA9IHBhcmVudEtleSA/IHBhcmVudEtleSArICcuJyArIGtleSA6IGtleTtcclxuXHRcdFx0XHRcdGxldCBvbGRWYWx1ZSA9IFJlZmxlY3QuZ2V0KHRhcmdldCwga2V5KTtcclxuXHRcdFx0XHRcdGxldCBvbGRUYXJnZXQgPSB1bmRlZmluZWQ7XHJcblx0XHRcdFx0XHQvL+W9k+aYr+aVsOe7hOaIluiAheWvueixoeWPmOWKqOaXtuiOt+WPluaXp+eahOWvueixoeaIluaVsOe7hFxyXG5cdFx0XHRcdFx0aWYgKEFycmF5LmlzQXJyYXkodGFyZ2V0KSkge1xyXG5cdFx0XHRcdFx0XHRvbGRUYXJnZXQgPSBbLi4udGFyZ2V0XTtcclxuXHRcdFx0XHRcdH0gZWxzZSBpZiAodHlwZW9mKHRhcmdldCkgPT0gJ29iamVjdCcgJiYgdGFyZ2V0KSB7XHJcblx0XHRcdFx0XHRcdG9sZFRhcmdldCA9IE9iamVjdC5hc3NpZ24oe30sIHRhcmdldCk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRpZiAob2xkVmFsdWUgPT09IHZhbHVlKSB7XHJcblx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0Ly/mm7TmlrDkuYvliY3lm57osIPpkqnlrZDlh73mlbBcclxuXHRcdFx0XHRcdGlmICh0eXBlb2YgaW5zdGFuY2UuJGJlZm9yZVVwZGF0ZSA9PSAnZnVuY3Rpb24nKSB7XHJcblx0XHRcdFx0XHRcdGluc3RhbmNlLiRiZWZvcmVVcGRhdGUuY2FsbChpbnN0YW5jZSwga2V5LCBvbGRWYWx1ZSwgdmFsdWUsICh0YXJnZXQgaW5zdGFuY2VvZiBSZWFjdGl2ZSkgPyB1bmRlZmluZWQgOiB0YXJnZXQpXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHQvL+abtOaWsOaVsOaNrlxyXG5cdFx0XHRcdFx0UmVmbGVjdC5zZXQodGFyZ2V0LCBrZXksIHZhbHVlKTtcclxuXHRcdFx0XHRcdC8vd2F0Y2jplK7lkI3op6PmnpBcclxuXHRcdFx0XHRcdHZhciBrZXlzID0gUmVhY3RpdmUuX3BhcnNlV2F0Y2hLZXkod2F0Y2hLZXkpO1xyXG5cdFx0XHRcdFx0Ly/nm5HlkKxcclxuXHRcdFx0XHRcdGluc3RhbmNlLl9vYnNlcnZlcihrZXlzLCBrZXksIHZhbHVlKVxyXG5cdFx0XHRcdFx0Ly/lm57osINcclxuXHRcdFx0XHRcdGtleXMuZm9yRWFjaCgoaXRlbSwgaW5kZXgpID0+IHtcclxuXHRcdFx0XHRcdFx0aWYgKHR5cGVvZihpbnN0YW5jZS4kd2F0Y2gpID09ICdvYmplY3QnICYmIGluc3RhbmNlLiR3YXRjaFtpdGVtXSAmJiB0eXBlb2YoaW5zdGFuY2UuJHdhdGNoW2l0ZW1dKSA9PVxyXG5cdFx0XHRcdFx0XHRcdCdmdW5jdGlvbicpIHtcclxuXHRcdFx0XHRcdFx0XHRpZiAoaW5kZXggPT09IGtleXMubGVuZ3RoIC0gMSkgeyAvL+WvueixoeWxnuaAp+ebkeWQrFxyXG5cdFx0XHRcdFx0XHRcdFx0aW5zdGFuY2UuJHdhdGNoW2l0ZW1dLmNhbGwoaW5zdGFuY2UsIHZhbHVlLCBvbGRWYWx1ZSk7XHJcblx0XHRcdFx0XHRcdFx0fSBlbHNlIGlmIChpbmRleCA9PT0ga2V5cy5sZW5ndGggLSAyKSB7IC8v5a+56LGh55uR5ZCsXHJcblx0XHRcdFx0XHRcdFx0XHRpbnN0YW5jZS4kd2F0Y2hbaXRlbV0uY2FsbChpbnN0YW5jZSwgdGFyZ2V0LCBvbGRUYXJnZXQpO1xyXG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7IC8v5a+56LGh56WW5YWI54i257qn55uR5ZCsXHJcblx0XHRcdFx0XHRcdFx0XHRpbnN0YW5jZS4kd2F0Y2hbaXRlbV0uY2FsbChpbnN0YW5jZSk7XHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9KVxyXG5cdFx0XHRcdFx0Ly/mm7TmlrDlrozmr5Xlm57osIPosIPnlKjpkqnlrZDlh73mlbBcclxuXHRcdFx0XHRcdGlmICh0eXBlb2YgaW5zdGFuY2UuJHVwZGF0ZWQgPT0gJ2Z1bmN0aW9uJykge1xyXG5cdFx0XHRcdFx0XHRpbnN0YW5jZS4kdXBkYXRlZC5jYWxsKGluc3RhbmNlLCBrZXksIG9sZFZhbHVlLCB2YWx1ZSwgKHRhcmdldCBpbnN0YW5jZW9mIFJlYWN0aXZlKSA/IHVuZGVmaW5lZCA6IHRhcmdldClcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiBuZXcgUHJveHkoaW5zdGFuY2UsIHdhdGNoZXIoKSk7XHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiDop6PmnpAkd2F0Y2jlrZfmrrXmlbDmja5cclxuXHQgKiBAcGFyYW0ge09iamVjdH0gd2F0Y2hLZXlcclxuXHQgKi9cclxuXHRzdGF0aWMgX3BhcnNlV2F0Y2hLZXkod2F0Y2hLZXkpIHtcclxuXHRcdHZhciBhcnIgPSB3YXRjaEtleS5zcGxpdCgnLicpO1xyXG5cdFx0dmFyIHJlc3VsdCA9IFtdO1xyXG5cdFx0dmFyIGtleUZpcnN0ID0gJyc7XHJcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHR2YXIga2V5ID0gJyc7XHJcblx0XHRcdGlmIChrZXlGaXJzdCkge1xyXG5cdFx0XHRcdGtleSA9IGtleUZpcnN0ICsgJy4nICsgYXJyW2ldO1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdGtleSA9IGtleUZpcnN0ICsgYXJyW2ldO1xyXG5cdFx0XHR9XHJcblx0XHRcdGtleUZpcnN0ID0ga2V5O1xyXG5cdFx0XHRyZXN1bHQucHVzaChrZXkpO1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHJlc3VsdDtcclxuXHR9XHJcblxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0aXZlXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 虚拟dom对象\r\n */\nvar VNode = function () {\n\tfunction VNode(id, tag, attrs, data, text, children, parent, isText, isComment) {\n\t\t_classCallCheck(this, VNode);\n\n\t\t//唯一键\n\t\tthis.id = id;\n\t\t//标签元素 基本标签 #text #comment\n\t\tthis.tag = tag;\n\t\t//原始的属性-属性值对象\n\t\tthis.attrs = attrs;\n\t\t//关联的响应式数据对象，其内的$attrs属性表示attrs经过渲染后的真实属性-属性值对象\n\t\tthis.data = data;\n\t\t//当前虚拟节点的文本\n\t\tthis.text = text;\n\t\t//当前节点下的子节点数组\n\t\tthis.children = children;\n\t\t//父级节点\n\t\tthis.parent = parent;\n\t\t//是否为文本节点\n\t\tthis.isText = isText;\n\t\t//是否为注释节点\n\t\tthis.isComment = isComment;\n\t\t//存储的节点\n\t\tthis.el = null;\n\t\t//复制的节点对象id\n\t\tthis.copyId = undefined;\n\t}\n\n\t/**\r\n  * 判断当前节点与旧节点相比是否有变化\r\n  * @param {Object} vnode\r\n  */\n\n\n\t_createClass(VNode, [{\n\t\tkey: 'isSame',\n\t\tvalue: function isSame(vnode) {\n\t\t\tif (this.tag !== vnode.tag) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.text !== vnode.text) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.isText !== vnode.isText) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.isComment !== vnode.isComment) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!VNode.isEqual(this.attrs, vnode.attrs)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!VNode.isEqual(this.data, vnode.data)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.children.length !== vnode.children.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\r\n   * 根据vnode创建真实节点\r\n   * @param {Object} reactive\r\n   */\n\n\t}, {\n\t\tkey: 'createElement',\n\t\tvalue: function createElement(reactive) {\n\t\t\tvar _this = this;\n\n\t\t\tvar ele = null;\n\t\t\t//文本节点\n\t\t\tif (this.isText) {\n\t\t\t\tvar text = '';\n\t\t\t\t//先获取含有lk:for的节点\n\t\t\t\tvar forNode = this.getForLoopVnode();\n\t\t\t\tif (forNode) {\n\t\t\t\t\tVNode.$reg.lastIndex = 0;\n\t\t\t\t\tif (VNode.$reg.test(this.text)) {\n\t\t\t\t\t\ttext = this.render(this.text, forNode.data, undefined, reactive);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext = this.text;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttext = this.render(this.text, reactive);\n\t\t\t\t}\n\t\t\t\tele = document.createTextNode(text);\n\t\t\t} else if (this.isComment) {\n\t\t\t\t//注释\n\t\t\t\tele = document.createComment(this.text);\n\t\t\t} else {\n\t\t\t\t//元素\n\t\t\t\tele = document.createElement(this.tag);\n\t\t\t\tvar attrs = Object.keys(this.attrs);\n\t\t\t\tfor (var i = 0; i < attrs.length; i++) {\n\t\t\t\t\tvar attr = attrs[i];\n\t\t\t\t\tvar attrValue = this.attrs[attr];\n\t\t\t\t\t//表示特殊指令\n\t\t\t\t\tif (attr.startsWith('lk:')) {\n\t\t\t\t\t\tvar name = attr.substr(3);\n\t\t\t\t\t\tif (name === 'for') {\n\t\t\t\t\t\t\t//for循环\n\t\t\t\t\t\t\tvar forNode = this.getForLoopVnode();\n\t\t\t\t\t\t\tif (forNode) {\n\t\t\t\t\t\t\t\tthis.render(attrValue, forNode.data, attr, reactive);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.render(attrValue, reactive, attr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//已经执行过for循环了\n\t\t\t\t\t\t\tif (this.data['$:lk:for-complete']) {\n\t\t\t\t\t\t\t\tvar list = this.data['$attrs'][attr];\n\t\t\t\t\t\t\t\tvar listKeys = Object.keys(list);\n\t\t\t\t\t\t\t\tvar length = this.parent.data['lk:for-length'];\n\t\t\t\t\t\t\t\t//添加数据\n\t\t\t\t\t\t\t\tif (listKeys.length != length) {\n\t\t\t\t\t\t\t\t\tthis.compileForVnodes(reactive);\n\t\t\t\t\t\t\t\t} else if (listKeys.length == length) {\n\t\t\t\t\t\t\t\t\t//修改数据\n\t\t\t\t\t\t\t\t\tvar item = this.attrs['lk:for-item'] || 'item';\n\t\t\t\t\t\t\t\t\tvar index = this.attrs['lk:for-index'] || 'index';\n\t\t\t\t\t\t\t\t\tvar value = list[listKeys[this.data[index]]];\n\t\t\t\t\t\t\t\t\tthis.data[item] = value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t//第一次执行for循环\n\t\t\t\t\t\t\t\tVNode.$reg.lastIndex = 0;\n\t\t\t\t\t\t\t\tif (VNode.$reg.test(attrValue)) {\n\t\t\t\t\t\t\t\t\t//记录\n\t\t\t\t\t\t\t\t\tthis.data['$:lk:for-complete'] = true;\n\t\t\t\t\t\t\t\t\tthis.compileForVnodes(reactive);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (name == 'if') {\n\t\t\t\t\t\t\t//if语句\n\t\t\t\t\t\t\tvar forNode = this.getForLoopVnode();\n\t\t\t\t\t\t\tif (forNode) {\n\t\t\t\t\t\t\t\tthis.render(attrValue, forNode.data, attr, reactive);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.render(attrValue, reactive, attr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (name == 'else') {\n\t\t\t\t\t\t\t//else语句\n\t\t\t\t\t\t\tthis.attrs[attr] = true;\n\t\t\t\t\t\t} else if (name == 'show') {\n\t\t\t\t\t\t\t//show语句\n\t\t\t\t\t\t\tvar forNode = this.getForLoopVnode();\n\t\t\t\t\t\t\tif (forNode) {\n\t\t\t\t\t\t\t\tthis.render(attrValue, forNode.data, attr, reactive);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.render(attrValue, reactive, attr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar isShow = this.data['$attrs'][attr];\n\t\t\t\t\t\t\tif (!isShow) {\n\t\t\t\t\t\t\t\tele.style.display = 'none';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (attr.startsWith('@')) {\n\t\t\t\t\t\t//事件\n\t\t\t\t\t\tvar paramArray = [];\n\t\t\t\t\t\tVNode.$reg.lastIndex = 0;\n\t\t\t\t\t\tif (VNode.$reg.test(attrValue)) {\n\t\t\t\t\t\t\tvar realValue = RegExp.$1;\n\t\t\t\t\t\t\tVNode.$methodReg.lastIndex = 0;\n\t\t\t\t\t\t\tif (VNode.$methodReg.test(realValue)) {\n\t\t\t\t\t\t\t\tthis.render('{{' + RegExp.$1 + '}}', reactive, attr);\n\t\t\t\t\t\t\t\tvar startIndex = realValue.lastIndexOf('(');\n\t\t\t\t\t\t\t\tvar endIndex = realValue.lastIndexOf(')');\n\t\t\t\t\t\t\t\tvar paramsStr = realValue.substring(startIndex + 1, endIndex);\n\t\t\t\t\t\t\t\tparamArray = paramsStr.split(',');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.render(attrValue, reactive, attr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error('events should use {{}} to wrap methods in methods');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar forNode = this.getForLoopVnode();\n\t\t\t\t\t\tparamArray.forEach(function (param, index) {\n\t\t\t\t\t\t\tif (param == '$event') {\n\t\t\t\t\t\t\t\t_this.data['$attrs'][attr + '.params[' + index + ']'] = '$event';\n\t\t\t\t\t\t\t} else if (forNode) {\n\t\t\t\t\t\t\t\t_this.render('{{' + param + '}}', forNode.data, attr + '.params[' + index + ']', reactive);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t_this.render('{{' + param + '}}', reactive, attr + '.params[' + index + ']');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvar eventName = attr.substr(1);\n\t\t\t\t\t\tele.addEventListener(eventName, function (e) {\n\t\t\t\t\t\t\t//方法含有括号\n\t\t\t\t\t\t\tvar f = _this.data['$attrs'][attr];\n\t\t\t\t\t\t\tif (typeof f != 'function') {\n\t\t\t\t\t\t\t\tthrow Error('The event corresponding to ' + attr + ' is not defined in methods');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar params = [];\n\t\t\t\t\t\t\tObject.keys(_this.data['$attrs']).forEach(function (item) {\n\t\t\t\t\t\t\t\tif (item.startsWith(attr + '.params')) {\n\t\t\t\t\t\t\t\t\tvar value = _this.data['$attrs'][item];\n\t\t\t\t\t\t\t\t\tif (value == '$event') {\n\t\t\t\t\t\t\t\t\t\tparams.push(e);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tparams.push(value);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (params.length == 0) {\n\t\t\t\t\t\t\t\tparams.push(e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tf.apply(reactive, params);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (attr == 'lk-cloak') {\n\t\t\t\t\t\tthis.attrs[attr] = 'lk:cloak';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar text = '';\n\t\t\t\t\t\t//先获取含有lk:for的节点\n\t\t\t\t\t\tvar forNode = this.getForLoopVnode();\n\t\t\t\t\t\tif (forNode) {\n\t\t\t\t\t\t\ttext = this.render(attrValue, forNode.data, attr, reactive);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttext = this.render(attrValue, reactive, attr);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar realValue = this.data['$attrs'] ? this.data['$attrs'][attr] : text;\n\t\t\t\t\t\tif (typeof realValue == 'boolean') {\n\t\t\t\t\t\t\tif (realValue) {\n\t\t\t\t\t\t\t\tele.setAttribute(attr, attr);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tele.removeAttribute(attr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tele.setAttribute(attr, text);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.children.forEach(function (child) {\n\t\t\t\tchild.createElement(reactive);\n\t\t\t});\n\t\t\tthis.el = ele;\n\t\t}\n\n\t\t/**\r\n   * 渲染for循环vnode\r\n   * @param {Object} reactive\r\n   */\n\n\t}, {\n\t\tkey: 'compileForVnodes',\n\t\tvalue: function compileForVnodes(reactive) {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar children = [];\n\t\t\tthis.parent.children.forEach(function (child) {\n\t\t\t\tif (!child.copyId || child.copyId != _this2.id) {\n\t\t\t\t\tchildren.push(child);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.parent.children = children;\n\t\t\tvar list = this.data['$attrs']['lk:for'];\n\t\t\tvar listKeys = Object.keys(list);\n\t\t\tthis.parent.data['lk:for-length'] = listKeys.length;\n\t\t\tif (listKeys.length > 0) {\n\t\t\t\tvar item = this.attrs['lk:for-item'] || 'item';\n\t\t\t\tvar _index = this.attrs['lk:for-index'] || 'index';\n\t\t\t\tthis.data[item] = list[listKeys[0]];\n\t\t\t\tthis.data[_index] = 0;\n\t\t\t\tfor (var j = listKeys.length - 1; j > 0; j--) {\n\t\t\t\t\tvar copyInstance = this.clone(j, this.parent);\n\t\t\t\t\tcopyInstance.data[item] = list[listKeys[j]];\n\t\t\t\t\tcopyInstance.data[_index] = j;\n\t\t\t\t\tthis.insertAfter(copyInstance);\n\t\t\t\t}\n\t\t\t\tthis.parent.createElement(reactive);\n\t\t\t} else {\n\t\t\t\tvar index = -1;\n\t\t\t\tvar length = this.parent.children.length;\n\t\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\t\tif (this.parent.children[i].id == this.id) {\n\t\t\t\t\t\tindex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.parent.children.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 完全克隆\r\n   * 不包括元素el\r\n   */\n\n\t}, {\n\t\tkey: 'fullClone',\n\t\tvalue: function fullClone(parent) {\n\t\t\tvar id = this.id;\n\t\t\tvar tag = this.tag;\n\t\t\tvar attrs = Object.assign({}, this.attrs);\n\t\t\tvar data = Object.assign({}, this.data);\n\t\t\tvar text = this.text;\n\t\t\tvar isText = this.isText;\n\t\t\tvar isComment = this.isComment;\n\t\t\tvar copyId = this.copyId;\n\t\t\tvar children = [];\n\t\t\tvar vnode = new VNode(id, tag, attrs, data, text, children, parent, isText, isComment);\n\t\t\tthis.children.forEach(function (child) {\n\t\t\t\tvar childVnode = child.fullClone(vnode);\n\t\t\t\tvnode.children.push(childVnode);\n\t\t\t});\n\t\t\treturn vnode;\n\t\t}\n\n\t\t/**\r\n   * 获取当前虚拟dom复制出来的最后一个节点\r\n   */\n\n\t}, {\n\t\tkey: 'getLastForVnode',\n\t\tvalue: function getLastForVnode() {\n\t\t\tvar _this3 = this;\n\n\t\t\tvar vnode = null;\n\t\t\tthis.parent.children.forEach(function (child) {\n\t\t\t\tif (child.copyId && child.copyId == _this3.id) {\n\t\t\t\t\tvnode = child;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn vnode;\n\t\t}\n\n\t\t/**\r\n   * 将指定虚拟dom插入当前虚拟dom后\r\n   * @param {Object} vnode\r\n   */\n\n\t}, {\n\t\tkey: 'insertAfter',\n\t\tvalue: function insertAfter(vnode) {\n\t\t\tvar index = this.getSequenceInParent();\n\t\t\tif (index > -1) {\n\t\t\t\tthis.parent.children.splice(index + 1, 0, vnode);\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 同级复制vnode，id会变\r\n   * @param {Object} index 序列值\r\n   * @param {Object} parent 父元素\r\n   * @param {Object} data 数据\r\n   */\n\n\t}, {\n\t\tkey: 'clone',\n\t\tvalue: function clone(index, parent, flag) {\n\t\t\t//id, tag, attrs, data, text, children, parent, isText, isComment\n\t\t\tvar id = flag ? 'vn_' + parent.id.substring(3) + '_' + index : this.id + '_copy_' + index;\n\t\t\tvar tag = this.tag;\n\t\t\tvar attrs = Object.assign({}, this.attrs);\n\t\t\tvar data = {};\n\t\t\tif (this.data['$attrs']) {\n\t\t\t\tvar _attrs = Object.assign({}, this.data['$attrs']);\n\t\t\t\tdata = Object.assign({}, this.data);\n\t\t\t\tdata['$attrs'] = _attrs;\n\t\t\t} else {\n\t\t\t\tdata = Object.assign({}, this.data);\n\t\t\t}\n\t\t\tvar text = this.text;\n\t\t\tvar isText = this.isText;\n\t\t\tvar isComment = this.isComment;\n\t\t\tvar children = [];\n\t\t\tvar vnode = new VNode(id, tag, attrs, data, text, children, parent, isText, isComment);\n\t\t\tvnode.copyId = this.id;\n\t\t\tthis.children.forEach(function (child, i) {\n\t\t\t\tvar childNode = child.clone(i, vnode, true);\n\t\t\t\tvnode.children.push(childNode);\n\t\t\t});\n\t\t\treturn vnode;\n\t\t}\n\n\t\t/**\r\n   * 根据该虚拟节点获取for循环根元素，即含有lk:for属性的虚拟节点\r\n   * 含有lk:for属性的节点为该节点或父节点或祖先节点\r\n   */\n\n\t}, {\n\t\tkey: 'getForLoopVnode',\n\t\tvalue: function getForLoopVnode() {\n\t\t\tif (this.attrs['lk:for']) {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tif (!this.parent) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (this.parent.attrs['lk:for']) {\n\t\t\t\treturn this.parent;\n\t\t\t}\n\t\t\treturn this.parent.getForLoopVnode();\n\t\t}\n\n\t\t/**\r\n   * 获取当前虚拟节点在parent中的序列位置\r\n   */\n\n\t}, {\n\t\tkey: 'getSequenceInParent',\n\t\tvalue: function getSequenceInParent() {\n\t\t\t//如果父节点不存在，返回-1\n\t\t\tif (!this.parent) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tvar length = this.parent.children.length;\n\t\t\tvar index = -1;\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tif (this.parent.children[i].id == this.id) {\n\t\t\t\t\tindex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn index;\n\t\t}\n\n\t\t/**\r\n   * 解析{{}}格式的内容\r\n   * @param {Object} template 字符串，形如{{user.name}}等\r\n   * @param {Object} obj 属性所在对象\r\n   * @param {Object} attr 绑定到data[$attrs]的属性名称\r\n   * @param {Object} reactive\r\n   */\n\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render(template, obj, attr, reactive) {\n\t\t\tvar _this4 = this;\n\n\t\t\tVNode.$reg.lastIndex = 0;\n\t\t\tif (!VNode.$reg.test(template)) {\n\t\t\t\treturn template;\n\t\t\t}\n\t\t\tVNode.$reg.lastIndex = 0;\n\t\t\tvar result = template.replace(VNode.$reg, function (matched, key) {\n\t\t\t\tvar data = VNode.parseExpression.call(obj, key);\n\t\t\t\tif (data == undefined && reactive && !VNode.isEqual(reactive, obj)) {\n\t\t\t\t\tdata = VNode.parseExpression.call(reactive, key);\n\t\t\t\t}\n\t\t\t\t_this4.data[key] = data;\n\t\t\t\tif (attr) {\n\t\t\t\t\tif (!_this4.data['$attrs']) {\n\t\t\t\t\t\t_this4.data['$attrs'] = {};\n\t\t\t\t\t}\n\t\t\t\t\t_this4.data['$attrs'][attr] = data;\n\t\t\t\t}\n\t\t\t\treturn VNode.dataToString(data);\n\t\t\t});\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\r\n   * 根据含有lk:else属性的元素获取含有lk:if属性的元素\r\n   */\n\n\t}, {\n\t\tkey: 'getIfVnode',\n\t\tvalue: function getIfVnode() {\n\t\t\tvar index = this.getSequenceInParent();\n\t\t\tif (index == 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tindex = index - 1;\n\t\t\tvar vnode = this.parent.children[index];\n\t\t\tif (vnode.attrs['lk:if']) {\n\t\t\t\treturn vnode;\n\t\t\t}\n\t\t\treturn vnode.getIfVnode();\n\t\t}\n\n\t\t/**\r\n   * 移除cloak\r\n   */\n\n\t}, {\n\t\tkey: 'removeCloak',\n\t\tvalue: function removeCloak() {\n\t\t\tif (this.attrs['lk-cloak'] && this.el) {\n\t\t\t\tthis.el.removeAttribute('lk-cloak');\n\t\t\t}\n\t\t\tthis.children.forEach(function (child) {\n\t\t\t\tchild.removeCloak();\n\t\t\t});\n\t\t}\n\n\t\t/**\r\n   * 解析表达式\r\n   * @param {Object} expression 表达式\r\n   */\n\n\t}], [{\n\t\tkey: 'parseExpression',\n\t\tvalue: function parseExpression(expression) {\n\t\t\treturn eval(expression);\n\t\t}\n\n\t\t/**\r\n   * 标签类型为文本节点和注释节点时获取内容\r\n   * @param {Object} el\r\n   */\n\n\t}, {\n\t\tkey: 'getNodeText',\n\t\tvalue: function getNodeText(el) {\n\t\t\tif (el.nodeType === 3 || el.nodeType == 8) {\n\t\t\t\treturn el.nodeValue;\n\t\t\t} else {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 判断两个值是否完全相等，可判断对象\r\n   * @param {Object} a\r\n   * @param {Object} b\r\n   */\n\n\t}, {\n\t\tkey: 'isEqual',\n\t\tvalue: function isEqual(a, b) {\n\t\t\tif (!a || !b) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif ((typeof a === 'undefined' ? 'undefined' : _typeof(a)) !== (typeof b === 'undefined' ? 'undefined' : _typeof(b))) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif ((typeof a === 'undefined' ? 'undefined' : _typeof(a)) == 'object' && (typeof b === 'undefined' ? 'undefined' : _typeof(b)) == 'object') {\n\t\t\t\tvar aProps = Object.getOwnPropertyNames(a);\n\t\t\t\tvar bProps = Object.getOwnPropertyNames(b);\n\t\t\t\tif (aProps.length != bProps.length) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tvar length = aProps.length;\n\t\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\t\tvar propName = aProps[i];\n\t\t\t\t\tvar propA = a[propName];\n\t\t\t\t\tvar propB = b[propName];\n\t\t\t\t\tif ((typeof propA === 'undefined' ? 'undefined' : _typeof(propA)) == 'object') {\n\t\t\t\t\t\tif (this.isEqual(propA, propB)) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (propA !== propB) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn a === b;\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 实现任何值转字符串\r\n   * @param {Object} data\r\n   */\n\n\t}, {\n\t\tkey: 'dataToString',\n\t\tvalue: function dataToString(data) {\n\t\t\tvar dataStr = '';\n\t\t\ttry {\n\t\t\t\tif ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) == 'object') {\n\t\t\t\t\tdataStr = JSON.stringify(data);\n\t\t\t\t} else {\n\t\t\t\t\tdataStr = data.toString();\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tdataStr = data;\n\t\t\t}\n\t\t\treturn dataStr;\n\t\t}\n\t}]);\n\n\treturn VNode;\n}();\n\nVNode.$reg = /\\{\\{(.*?)\\}\\}/g;\n\nVNode.$methodReg = /(.+)\\(.*\\)/g;\n\nmodule.exports = VNode;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n")}])}));