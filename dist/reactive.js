!function(t,F){"object"==typeof exports&&"object"==typeof module?module.exports=F():"function"==typeof define&&define.amd?define([],F):"object"==typeof exports?exports.Reactive=F():t.Reactive=F()}(window,(function(){return function(t){var F={};function Q(U){if(F[U])return F[U].exports;var c=F[U]={i:U,l:!1,exports:{}};return t[U].call(c.exports,c,c.exports,Q),c.l=!0,c.exports}return Q.m=t,Q.c=F,Q.d=function(t,F,U){Q.o(t,F)||Object.defineProperty(t,F,{enumerable:!0,get:U})},Q.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},Q.t=function(t,F){if(1&F&&(t=Q(t)),8&F)return t;if(4&F&&"object"==typeof t&&t&&t.__esModule)return t;var U=Object.create(null);if(Q.r(U),Object.defineProperty(U,"default",{enumerable:!0,value:t}),2&F&&"string"!=typeof t)for(var c in t)Q.d(U,c,function(F){return t[F]}.bind(null,c));return U},Q.n=function(t){var F=t&&t.__esModule?function(){return t.default}:function(){return t};return Q.d(F,"a",F),F},Q.o=function(t,F){return Object.prototype.hasOwnProperty.call(t,F)},Q.p="",Q(Q.s=0)}([function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar VNode = __webpack_require__(1);\n\n/**\r\n * 响应式MVVM对象\r\n */\n\nvar Reactive = function () {\n\tfunction Reactive() {\n\t\t_classCallCheck(this, Reactive);\n\n\t\tthis.$el = null;\n\t\tthis.$vnode = null;\n\t\tthis._vnode = null;\n\t\tthis.$watch = null;\n\t\tthis.$beforeMount = null;\n\t\tthis.$mounted = null;\n\t\tthis.$beforeCreate = null;\n\t\tthis.$created = null;\n\t\tthis.$updated = null;\n\t\tthis.$beforeUpdate = null;\n\t}\n\n\t/**\r\n  * 实例方法：挂载到指定节点\r\n  * @param {Object} selector\r\n  */\n\n\n\t_createClass(Reactive, [{\n\t\tkey: 'mount',\n\t\tvalue: function mount(selector) {\n\t\t\tif (typeof this.$beforeMount == 'function') {\n\t\t\t\tthis.$beforeMount.call(this);\n\t\t\t}\n\t\t\t//获取挂载元素\n\t\t\tvar el = document.querySelector(selector);\n\t\t\tif (!el) {\n\t\t\t\tthrow new Error('The argument to the mount method must be dom selectors and the DOM that is pointed to cannot be empty');\n\t\t\t}\n\t\t\t//创建虚拟节点\n\t\t\tthis.$vnode = this._createVNode(el);\n\t\t\tthis._vnode = this._createVNode(el);\n\t\t\t//创建真实dom\n\t\t\tthis._updateVnodes(this.$vnode);\n\t\t\tthis._updateVnodes(this._vnode);\n\t\t\tel.parentNode.insertBefore(this._vnode.el, el);\n\t\t\tel.remove();\n\t\t\tif (typeof this.$mounted == 'function') {\n\t\t\t\tthis.$mounted.call(this);\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\r\n   * 比对新旧节点数据\r\n   */\n\n\t}, {\n\t\tkey: '_compare',\n\t\tvalue: function _compare() {\n\t\t\tif (!this.$vnode.isSame(this._vnode)) {\n\t\t\t\tvar el = this._vnode.el;\n\t\t\t\tthis._updateVnodes(this._vnode);\n\t\t\t\tel.parentNode.insertBefore(this._vnode.el, el);\n\t\t\t\tel.remove();\n\t\t\t\tthis.$el = this._vnode.el;\n\t\t\t} else {\n\t\t\t\tthis._compareChildren(this.$vnode, this._vnode);\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 比对子孙节点新旧数据\r\n   */\n\n\t}, {\n\t\tkey: '_compareChildren',\n\t\tvalue: function _compareChildren(vnode, oldVnode) {\n\t\t\tvar length = oldVnode.children.length;\n\t\t\tvar length2 = vnode.children.length;\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tfor (var j = 0; j < length2; j++) {\n\t\t\t\t\tvar oVn = oldVnode.children[i]; //当前旧节点\n\t\t\t\t\tvar nVn = vnode.children[j]; //当前节点\n\t\t\t\t\tif (!nVn.isSame(oVn) && nVn.id === oVn.id) {\n\t\t\t\t\t\tif (oVn.attrs['lk:if']) {\n\t\t\t\t\t\t\tif (oVn.data['$attrs']['lk:if']) {\n\t\t\t\t\t\t\t\t//旧节点原先已渲染\n\t\t\t\t\t\t\t\tif (nVn.attrs['lk:if']) {\n\t\t\t\t\t\t\t\t\t//新结点\n\t\t\t\t\t\t\t\t\tif (!nVn.data['$attrs']['lk:if']) {\n\t\t\t\t\t\t\t\t\t\t//新结点未渲染\n\t\t\t\t\t\t\t\t\t\tvar _el = oVn.parent.el;\n\t\t\t\t\t\t\t\t\t\tthis._updateVnodes(oVn.parent);\n\t\t\t\t\t\t\t\t\t\t_el.parentNode.insertBefore(oVn.parent.el, _el);\n\t\t\t\t\t\t\t\t\t\t_el.remove();\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t//旧节点原先未渲染\n\t\t\t\t\t\t\t\tif (nVn.attrs['lk:if']) {\n\t\t\t\t\t\t\t\t\t//新结点\n\t\t\t\t\t\t\t\t\tif (nVn.data['$attrs']['lk:if']) {\n\t\t\t\t\t\t\t\t\t\t//新结点已渲染\n\t\t\t\t\t\t\t\t\t\tvar _el2 = oVn.parent.el;\n\t\t\t\t\t\t\t\t\t\tthis._updateVnodes(oVn.parent);\n\t\t\t\t\t\t\t\t\t\t_el2.parentNode.insertBefore(oVn.parent.el, _el2);\n\t\t\t\t\t\t\t\t\t\t_el2.remove();\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar forNode = oVn.getForLoopVnode();\n\t\t\t\t\t\tif (forNode) {\n\t\t\t\t\t\t\tvar _el3 = forNode.parent.el;\n\t\t\t\t\t\t\tthis._updateVnodes(forNode.parent);\n\t\t\t\t\t\t\t_el3.parentNode.insertBefore(forNode.parent.el, _el3);\n\t\t\t\t\t\t\t_el3.remove();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar el = oVn.el;\n\t\t\t\t\t\tthis._updateVnodes(oVn);\n\t\t\t\t\t\tel.parentNode.insertBefore(oVn.el, el);\n\t\t\t\t\t\tel.remove();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._compareChildren(nVn, oVn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 更新虚拟节点数据\r\n   */\n\n\t}, {\n\t\tkey: '_updateVnodes',\n\t\tvalue: function _updateVnodes(vnode) {\n\t\t\t//根据虚拟dom递归创建真实节点以及其子节点（更新虚拟dom的el）\n\t\t\tvnode.createElement(this);\n\t\t\t//将虚拟dom的el填充到父元素的el中\n\t\t\tvar f = function f(item) {\n\t\t\t\titem.children.forEach(function (child) {\n\t\t\t\t\tif (child.attrs['lk:for']) {\n\t\t\t\t\t\tvar list = child.data['$attrs']['lk:for'];\n\t\t\t\t\t\tvar listKeys = Object.keys(list);\n\t\t\t\t\t\tif (listKeys.length == 0) {\n\t\t\t\t\t\t\tchild.el.remove();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (child.attrs['lk:if']) {\n\t\t\t\t\t\t\t\tvar needCreate = child.data['$attrs']['lk:if'];\n\t\t\t\t\t\t\t\tif (needCreate) {\n\t\t\t\t\t\t\t\t\titem.el.appendChild(child.el);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tchild.el.remove();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (child.attrs['lk:else']) {\n\t\t\t\t\t\t\t\tvar brotherVnode = child.getIfVnode();\n\t\t\t\t\t\t\t\tif (brotherVnode) {\n\t\t\t\t\t\t\t\t\tvar brotherNeedCreate = brotherVnode.data['$attrs']['lk:if'];\n\t\t\t\t\t\t\t\t\tif (brotherNeedCreate) {\n\t\t\t\t\t\t\t\t\t\tchild.el.remove();\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\titem.el.appendChild(child.el);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthrow new Error('lk:else must be combined with lk:if');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\titem.el.appendChild(child.el);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (child.attrs['lk:if']) {\n\t\t\t\t\t\tvar _needCreate = child.data['$attrs']['lk:if'];\n\t\t\t\t\t\tif (_needCreate) {\n\t\t\t\t\t\t\titem.el.appendChild(child.el);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tchild.el.remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (child.attrs['lk:else']) {\n\t\t\t\t\t\tvar brotherVnode = child.getIfVnode();\n\t\t\t\t\t\tif (brotherVnode) {\n\t\t\t\t\t\t\tvar _brotherNeedCreate = brotherVnode.data['$attrs']['lk:if'];\n\t\t\t\t\t\t\tif (_brotherNeedCreate) {\n\t\t\t\t\t\t\t\tchild.el.remove();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\titem.el.appendChild(child.el);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error('lk:else must be combined with lk:if');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\titem.el.appendChild(child.el);\n\t\t\t\t\t}\n\n\t\t\t\t\tf(child);\n\t\t\t\t});\n\t\t\t};\n\t\t\tf(vnode);\n\t\t}\n\n\t\t/**\r\n   * 创建虚拟dom\r\n   */\n\n\t}, {\n\t\tkey: '_createVNode',\n\t\tvalue: function _createVNode(el, index, parent) {\n\t\t\tindex = index ? '' + index : 0;\n\t\t\tvar id = parent ? 'vn_' + parent.id.substring(3) + '_' + index : 'vn_' + index;\n\t\t\tvar tag = el.nodeName;\n\t\t\tvar attrs = {};\n\t\t\tvar data = {};\n\t\t\tvar text = VNode.getNodeText(el);\n\t\t\tvar children = [];\n\t\t\tvar isText = el.nodeType == 3;\n\t\t\tvar isComment = el.nodeType == 8;\n\t\t\tif (el.attributes) {\n\t\t\t\tvar length = el.attributes.length;\n\t\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\t\tvar it = el.attributes[i];\n\t\t\t\t\t//属性名\n\t\t\t\t\tvar localName = it.localName;\n\t\t\t\t\t//属性值\n\t\t\t\t\tvar value = it.value;\n\t\t\t\t\tattrs[localName] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar vnode = new VNode(id, tag, attrs, data, text, children, parent, isText, isComment);\n\t\t\t//获取子节点\n\t\t\tvar childs = el.childNodes;\n\t\t\tvar childLength = childs.length;\n\t\t\t// 深度优先算法\n\t\t\tfor (var _i = 0; _i < childLength; _i++) {\n\t\t\t\tvar childNode = this._createVNode(childs[_i], _i, vnode);\n\t\t\t\tvnode.children.push(childNode);\n\t\t\t}\n\t\t\treturn vnode;\n\t\t}\n\n\t\t/**\r\n   * 监听数据变更进行处理\r\n   * @param {Object} keys\r\n   * @param {Object} key\r\n   * @param {Object} value\r\n   */\n\n\t}, {\n\t\tkey: '_observer',\n\t\tvalue: function _observer(keys, key, value) {\n\t\t\tif (this.$vnode) {\n\t\t\t\tthis._updateVnodes(this.$vnode);\n\t\t\t\tthis._compare();\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 创建一个Reactive的Proxy对象\r\n   * @param {Object} options\r\n   */\n\n\t}], [{\n\t\tkey: 'createApp',\n\t\tvalue: function createApp(options) {\n\t\t\t//初始化创建一个实例\n\t\t\tvar instance = new Reactive();\n\t\t\t//校验参数\n\t\t\tvar opt = Reactive._validator(options);\n\t\t\t//配置钩子函数\n\t\t\tinstance.$beforeCreate = opt.beforeCreate;\n\t\t\tinstance.$created = opt.created;\n\t\t\tinstance.$beforeUpdate = opt.beforeUpdate;\n\t\t\tinstance.$updated = opt.updated;\n\t\t\tinstance.$beforeMount = opt.beforeMount;\n\t\t\tinstance.$mounted = opt.mounted;\n\t\t\t//执行钩子函数beforeCreate\n\t\t\tinstance.$beforeCreate.call(instance);\n\t\t\t//配置watch监听参数\n\t\t\tinstance.$watch = opt.watch;\n\t\t\t//将data直接挂载在实例上\n\t\t\tObject.keys(opt.data).forEach(function (key) {\n\t\t\t\tif (instance[key]) {\n\t\t\t\t\tthrow new Error(key + ' is already defined in the instance');\n\t\t\t\t}\n\t\t\t\tinstance[key] = opt.data[key];\n\t\t\t});\n\t\t\t//将methods直接挂载在实例上\n\t\t\tObject.keys(opt.methods).forEach(function (key) {\n\t\t\t\tif (instance[key]) {\n\t\t\t\t\tthrow new Error(key + ' is already defined in the instance');\n\t\t\t\t}\n\t\t\t\tinstance[key] = opt.methods[key];\n\t\t\t});\n\t\t\t//进行proxy代理\n\t\t\tinstance = Reactive._proxy(instance);\n\t\t\t//执行钩子函数created\n\t\t\tinstance.$created.call(instance);\n\t\t\t//返回实例\n\t\t\treturn instance;\n\t\t}\n\n\t\t/**\r\n   * 判断reactive中的指定属性是否不需要监听\r\n   * @param {Object} prop\r\n   * 不需要监听返回true，需要监听返回false\r\n   */\n\n\t}, {\n\t\tkey: '_UnObserverProperties',\n\t\tvalue: function _UnObserverProperties(prop) {\n\t\t\treturn ['$el', '$vnode', '_vnode', '$watch', 'mount', '_observer', '$beforeCreate', '$created', '$beforeMount', '$mounted', '$beforeUpdate', '$updated'].includes(prop);\n\t\t}\n\n\t\t/**\r\n   * 检验options参数\r\n   * @param {Object} options\r\n   */\n\n\t}, {\n\t\tkey: '_validator',\n\t\tvalue: function _validator(options) {\n\t\t\tvar opt = {\n\t\t\t\tdata: {},\n\t\t\t\twatch: {},\n\t\t\t\tmethods: {},\n\t\t\t\tbeforeCreate: function beforeCreate() {},\n\t\t\t\tcreated: function created() {},\n\t\t\t\tbeforeMount: function beforeMount() {},\n\t\t\t\tmounted: function mounted() {},\n\t\t\t\tbeforeUpdate: function beforeUpdate() {},\n\t\t\t\tupdated: function updated() {}\n\t\t\t};\n\t\t\tif ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) == 'object' && options) {\n\t\t\t\tif (_typeof(options.data) == 'object' && options.data) {\n\t\t\t\t\topt.data = options.data;\n\t\t\t\t}\n\t\t\t\tif (_typeof(options.watch) == 'object' && options.watch) {\n\t\t\t\t\tObject.keys(options.watch).forEach(function (watchName) {\n\t\t\t\t\t\tif (typeof options.watch[watchName] != 'function' || !options.watch[watchName]) {\n\t\t\t\t\t\t\tthrow new Error('The definition of \"' + watchName + '\" in watch should be a function');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\topt.watch = options.watch;\n\t\t\t\t}\n\t\t\t\tif (_typeof(options.methods) == 'object' && options.methods) {\n\t\t\t\t\tObject.keys(options.methods).forEach(function (methodName) {\n\t\t\t\t\t\tif (typeof options.methods[methodName] != 'function' || !options.methods[methodName]) {\n\t\t\t\t\t\t\tthrow new Error('The definition of \"' + methodName + '\" in methods should be a function');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\topt.methods = options.methods;\n\t\t\t\t}\n\t\t\t\tif (typeof options.beforeMount == 'function' && options.beforeMount) {\n\t\t\t\t\topt.beforeMount = options.beforeMount;\n\t\t\t\t}\n\t\t\t\tif (typeof options.mounted == 'function' && options.mounted) {\n\t\t\t\t\topt.mounted = options.mounted;\n\t\t\t\t}\n\t\t\t\tif (typeof options.beforeCreate == 'function' && options.beforeCreate) {\n\t\t\t\t\topt.beforeCreate = options.beforeCreate;\n\t\t\t\t}\n\t\t\t\tif (typeof options.created == 'function' && options.created) {\n\t\t\t\t\topt.created = options.created;\n\t\t\t\t}\n\t\t\t\tif (typeof options.beforeUpdate == 'function' && options.beforeUpdate) {\n\t\t\t\t\topt.beforeUpdate = options.beforeUpdate;\n\t\t\t\t}\n\t\t\t\tif (typeof options.updated == 'function' && options.updated) {\n\t\t\t\t\topt.updated = options.updated;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"The argument to the 'createApp' method must be an object\");\n\t\t\t}\n\t\t\treturn opt;\n\t\t}\n\n\t\t/**\r\n   * proxy代理实例\r\n   * @param {Object} instance\r\n   */\n\n\t}, {\n\t\tkey: '_proxy',\n\t\tvalue: function _proxy(instance) {\n\t\t\tvar watcher = function watcher(parentKey) {\n\t\t\t\treturn {\n\t\t\t\t\tget: function get(target, key) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tvar watchKey = parentKey ? parentKey + '.' + key : key;\n\t\t\t\t\t\t\tif (Reactive._UnObserverProperties(key)) {\n\t\t\t\t\t\t\t\treturn Reflect.get(target, key);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn new Proxy(target[key], watcher(watchKey));\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\treturn Reflect.get(target, key);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tset: function set(target, key, value) {\n\t\t\t\t\t\tif (Reactive._UnObserverProperties(key)) {\n\t\t\t\t\t\t\tReflect.set(target, key, value);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar watchKey = parentKey ? parentKey + '.' + key : key;\n\t\t\t\t\t\tvar oldValue = Reflect.get(target, key);\n\t\t\t\t\t\tvar oldTarget = undefined;\n\t\t\t\t\t\t//当是数组或者对象变动时获取旧的对象或数组\n\t\t\t\t\t\tif (Array.isArray(target)) {\n\t\t\t\t\t\t\toldTarget = [].concat(_toConsumableArray(target));\n\t\t\t\t\t\t} else if ((typeof target === 'undefined' ? 'undefined' : _typeof(target)) == 'object' && target) {\n\t\t\t\t\t\t\toldTarget = Object.assign({}, target);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (oldValue === value) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//更新之前回调钩子函数\n\t\t\t\t\t\tif (typeof instance.$beforeUpdate == 'function') {\n\t\t\t\t\t\t\tinstance.$beforeUpdate.call(instance, key, oldValue, value, target instanceof Reactive ? undefined : target);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//更新数据\n\t\t\t\t\t\tReflect.set(target, key, value);\n\t\t\t\t\t\t//watch键名解析\n\t\t\t\t\t\tvar keys = Reactive._parseWatchKey(watchKey);\n\t\t\t\t\t\t//监听\n\t\t\t\t\t\tinstance._observer(keys, key, value);\n\t\t\t\t\t\t//回调\n\t\t\t\t\t\tkeys.forEach(function (item, index) {\n\t\t\t\t\t\t\tif (_typeof(instance.$watch) == 'object' && instance.$watch[item] && typeof instance.$watch[item] == 'function') {\n\t\t\t\t\t\t\t\tif (index === keys.length - 1) {\n\t\t\t\t\t\t\t\t\t//对象属性监听\n\t\t\t\t\t\t\t\t\tinstance.$watch[item].call(instance, value, oldValue);\n\t\t\t\t\t\t\t\t} else if (index === keys.length - 2) {\n\t\t\t\t\t\t\t\t\t//对象监听\n\t\t\t\t\t\t\t\t\tinstance.$watch[item].call(instance, target, oldTarget);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t//对象祖先父级监听\n\t\t\t\t\t\t\t\t\tinstance.$watch[item].call(instance);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\t//更新完毕回调调用钩子函数\n\t\t\t\t\t\tif (typeof instance.$updated == 'function') {\n\t\t\t\t\t\t\tinstance.$updated.call(instance, key, oldValue, value, target instanceof Reactive ? undefined : target);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t\treturn new Proxy(instance, watcher());\n\t\t}\n\n\t\t/**\r\n   * 解析$watch字段数据\r\n   * @param {Object} watchKey\r\n   */\n\n\t}, {\n\t\tkey: '_parseWatchKey',\n\t\tvalue: function _parseWatchKey(watchKey) {\n\t\t\tvar arr = watchKey.split('.');\n\t\t\tvar result = [];\n\t\t\tvar keyFirst = '';\n\t\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\t\tvar key = '';\n\t\t\t\tif (keyFirst) {\n\t\t\t\t\tkey = keyFirst + '.' + arr[i];\n\t\t\t\t} else {\n\t\t\t\t\tkey = keyFirst + arr[i];\n\t\t\t\t}\n\t\t\t\tkeyFirst = key;\n\t\t\t\tresult.push(key);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}]);\n\n\treturn Reactive;\n}();\n\nmodule.exports = Reactive;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 虚拟dom对象\r\n */\nvar VNode = function () {\n\tfunction VNode(id, tag, attrs, data, text, children, parent, isText, isComment) {\n\t\t_classCallCheck(this, VNode);\n\n\t\t//唯一键\n\t\tthis.id = id;\n\t\t//标签元素 基本标签 #text #comment\n\t\tthis.tag = tag;\n\t\t//原始的属性-属性值对象\n\t\tthis.attrs = attrs;\n\t\t//关联的响应式数据对象，其内的$attrs属性表示attrs经过渲染后的真实属性-属性值对象\n\t\tthis.data = data;\n\t\t//当前虚拟节点的文本\n\t\tthis.text = text;\n\t\t//当前节点下的子节点数组\n\t\tthis.children = children;\n\t\t//父级节点\n\t\tthis.parent = parent;\n\t\t//是否为文本节点\n\t\tthis.isText = isText;\n\t\t//是否为注释节点\n\t\tthis.isComment = isComment;\n\t\t//存储的节点\n\t\tthis.el = null;\n\t\t//复制的节点对象id\n\t\tthis.copyId = undefined;\n\t}\n\n\t/**\r\n  * 判断当前节点与旧节点相比是否有变化\r\n  * @param {Object} vnode\r\n  */\n\n\n\t_createClass(VNode, [{\n\t\tkey: 'isSame',\n\t\tvalue: function isSame(vnode) {\n\t\t\tif (this.tag !== vnode.tag) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.text !== vnode.text) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.isText !== vnode.isText) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.isComment !== vnode.isComment) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!VNode.isEqual(this.attrs, vnode.attrs)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!VNode.isEqual(this.data, vnode.data)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.children.length !== vnode.children.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\r\n   * 根据vnode创建真实节点\r\n   * @param {Object} reactive\r\n   */\n\n\t}, {\n\t\tkey: 'createElement',\n\t\tvalue: function createElement(reactive) {\n\t\t\tvar _this = this;\n\n\t\t\tvar ele = null;\n\t\t\t//文本节点\n\t\t\tif (this.isText) {\n\t\t\t\tvar text = '';\n\t\t\t\t//先获取含有lk:for的节点\n\t\t\t\tvar forNode = this.getForLoopVnode();\n\t\t\t\tif (forNode) {\n\t\t\t\t\tVNode.$reg.lastIndex = 0;\n\t\t\t\t\tif (VNode.$reg.test(this.text)) {\n\t\t\t\t\t\ttext = this.render(this.text, forNode.data, undefined, reactive);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext = this.text;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttext = this.render(this.text, reactive);\n\t\t\t\t}\n\t\t\t\tele = document.createTextNode(text);\n\t\t\t} else if (this.isComment) {\n\t\t\t\t//注释\n\t\t\t\tele = document.createComment(this.text);\n\t\t\t} else {\n\t\t\t\t//元素\n\t\t\t\tele = document.createElement(this.tag);\n\t\t\t\tvar attrs = Object.keys(this.attrs);\n\t\t\t\tfor (var i = 0; i < attrs.length; i++) {\n\t\t\t\t\tvar attr = attrs[i];\n\t\t\t\t\tvar attrValue = this.attrs[attr];\n\t\t\t\t\t//表示特殊指令\n\t\t\t\t\tif (attr.startsWith('lk:')) {\n\t\t\t\t\t\tvar name = attr.substr(3);\n\t\t\t\t\t\tif (name === 'for') {\n\t\t\t\t\t\t\t//for循环\n\t\t\t\t\t\t\tvar forNode = this.getForLoopVnode();\n\t\t\t\t\t\t\tif (forNode) {\n\t\t\t\t\t\t\t\tthis.render(attrValue, forNode.data, attr, reactive);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.render(attrValue, reactive, attr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//已经执行过for循环了\n\t\t\t\t\t\t\tif (this.data['$:lk:for-complete']) {\n\t\t\t\t\t\t\t\tvar list = this.data['$attrs'][attr];\n\t\t\t\t\t\t\t\tvar listKeys = Object.keys(list);\n\t\t\t\t\t\t\t\tvar length = this.parent.data['lk:for-length'];\n\t\t\t\t\t\t\t\t//添加数据\n\t\t\t\t\t\t\t\tif (listKeys.length != length) {\n\t\t\t\t\t\t\t\t\tthis.compileForVnodes(reactive);\n\t\t\t\t\t\t\t\t} else if (listKeys.length == length) {\n\t\t\t\t\t\t\t\t\t//修改数据\n\t\t\t\t\t\t\t\t\tvar item = this.attrs['lk:for-item'] || 'item';\n\t\t\t\t\t\t\t\t\tvar index = this.attrs['lk:for-index'] || 'index';\n\t\t\t\t\t\t\t\t\tvar value = list[listKeys[this.data[index]]];\n\t\t\t\t\t\t\t\t\tthis.data[item] = value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t//第一次执行for循环\n\t\t\t\t\t\t\t\tVNode.$reg.lastIndex = 0;\n\t\t\t\t\t\t\t\tif (VNode.$reg.test(attrValue)) {\n\t\t\t\t\t\t\t\t\t//记录\n\t\t\t\t\t\t\t\t\tthis.data['$:lk:for-complete'] = true;\n\t\t\t\t\t\t\t\t\tthis.compileForVnodes(reactive);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (name == 'if') {\n\t\t\t\t\t\t\t//if语句\n\t\t\t\t\t\t\tvar forNode = this.getForLoopVnode();\n\t\t\t\t\t\t\tif (forNode) {\n\t\t\t\t\t\t\t\tthis.render(attrValue, forNode.data, attr, reactive);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.render(attrValue, reactive, attr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (name == 'else') {\n\t\t\t\t\t\t\t//else语句\n\t\t\t\t\t\t\tthis.attrs[attr] = true;\n\t\t\t\t\t\t} else if (name == 'show') {\n\t\t\t\t\t\t\t//show语句\n\t\t\t\t\t\t\tvar forNode = this.getForLoopVnode();\n\t\t\t\t\t\t\tif (forNode) {\n\t\t\t\t\t\t\t\tthis.render(attrValue, forNode.data, attr, reactive);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.render(attrValue, reactive, attr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar isShow = this.data['$attrs'][attr];\n\t\t\t\t\t\t\tif (!isShow) {\n\t\t\t\t\t\t\t\tele.style.display = 'none';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (attr.startsWith('@')) {\n\t\t\t\t\t\t//事件\n\t\t\t\t\t\tvar paramArray = [];\n\t\t\t\t\t\tVNode.$reg.lastIndex = 0;\n\t\t\t\t\t\tif (VNode.$reg.test(attrValue)) {\n\t\t\t\t\t\t\tvar realValue = RegExp.$1;\n\t\t\t\t\t\t\tVNode.$methodReg.lastIndex = 0;\n\t\t\t\t\t\t\tif (VNode.$methodReg.test(realValue)) {\n\t\t\t\t\t\t\t\tthis.render('{{' + RegExp.$1 + '}}', reactive, attr);\n\t\t\t\t\t\t\t\tvar startIndex = realValue.lastIndexOf('(');\n\t\t\t\t\t\t\t\tvar endIndex = realValue.lastIndexOf(')');\n\t\t\t\t\t\t\t\tvar paramsStr = realValue.substring(startIndex + 1, endIndex);\n\t\t\t\t\t\t\t\tparamArray = paramsStr.split(',');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.render(attrValue, reactive, attr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error('events should use {{}} to wrap methods in methods');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar forNode = this.getForLoopVnode();\n\t\t\t\t\t\tparamArray.forEach(function (param, index) {\n\t\t\t\t\t\t\tif (param == '$event') {\n\t\t\t\t\t\t\t\t_this.data['$attrs'][attr + '.params[' + index + ']'] = '$event';\n\t\t\t\t\t\t\t} else if (forNode) {\n\t\t\t\t\t\t\t\t_this.render('{{' + param + '}}', forNode.data, attr + '.params[' + index + ']', reactive);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t_this.render('{{' + param + '}}', reactive, attr + '.params[' + index + ']');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvar eventName = attr.substr(1);\n\t\t\t\t\t\tele.addEventListener(eventName, function (e) {\n\t\t\t\t\t\t\t//方法含有括号\n\t\t\t\t\t\t\tvar f = _this.data['$attrs'][attr];\n\t\t\t\t\t\t\tif (typeof f != 'function') {\n\t\t\t\t\t\t\t\tthrow Error('The event corresponding to ' + attr + ' is not defined in methods');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar params = [];\n\t\t\t\t\t\t\tObject.keys(_this.data['$attrs']).forEach(function (item) {\n\t\t\t\t\t\t\t\tif (item.startsWith(attr + '.params')) {\n\t\t\t\t\t\t\t\t\tvar value = _this.data['$attrs'][item];\n\t\t\t\t\t\t\t\t\tif (value == '$event') {\n\t\t\t\t\t\t\t\t\t\tparams.push(e);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tparams.push(value);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (params.length == 0) {\n\t\t\t\t\t\t\t\tparams.push(e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tf.apply(reactive, params);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar text = '';\n\t\t\t\t\t\t//先获取含有lk:for的节点\n\t\t\t\t\t\tvar forNode = this.getForLoopVnode();\n\t\t\t\t\t\tif (forNode) {\n\t\t\t\t\t\t\tVNode.$reg.lastIndex = 0;\n\t\t\t\t\t\t\tif (VNode.$reg.test(attrValue)) {\n\t\t\t\t\t\t\t\ttext = this.render(attrValue, forNode.data, attr, reactive);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttext = attrValue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttext = this.render(attrValue, reactive, attr);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar realValue = this.data['$attrs'] ? this.data['$attrs'][attr] : text;\n\t\t\t\t\t\tif (typeof realValue == 'boolean') {\n\t\t\t\t\t\t\tif (realValue) {\n\t\t\t\t\t\t\t\tele.setAttribute(attr, attr);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tele.removeAttribute(attr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tele.setAttribute(attr, text);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.children.forEach(function (child) {\n\t\t\t\tchild.createElement(reactive);\n\t\t\t});\n\t\t\tthis.el = ele;\n\t\t}\n\n\t\t/**\r\n   * 渲染for循环vnode\r\n   * @param {Object} reactive\r\n   */\n\n\t}, {\n\t\tkey: 'compileForVnodes',\n\t\tvalue: function compileForVnodes(reactive) {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar children = [];\n\t\t\tthis.parent.children.forEach(function (child) {\n\t\t\t\tif (!child.copyId || child.copyId != _this2.id) {\n\t\t\t\t\tchildren.push(child);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.parent.children = children;\n\t\t\tvar list = this.data['$attrs']['lk:for'];\n\t\t\tvar listKeys = Object.keys(list);\n\t\t\tthis.parent.data['lk:for-length'] = listKeys.length;\n\t\t\tif (listKeys.length > 0) {\n\t\t\t\tvar item = this.attrs['lk:for-item'] || 'item';\n\t\t\t\tvar _index = this.attrs['lk:for-index'] || 'index';\n\t\t\t\tthis.data[item] = list[listKeys[0]];\n\t\t\t\tthis.data[_index] = 0;\n\t\t\t\tfor (var j = listKeys.length - 1; j > 0; j--) {\n\t\t\t\t\tvar copyInstance = this.clone(j, this.parent);\n\t\t\t\t\tcopyInstance.data[item] = list[listKeys[j]];\n\t\t\t\t\tcopyInstance.data[_index] = j;\n\t\t\t\t\tthis.insertAfter(copyInstance);\n\t\t\t\t}\n\t\t\t\tthis.parent.createElement(reactive);\n\t\t\t} else {\n\t\t\t\tvar index = -1;\n\t\t\t\tvar length = this.parent.children.length;\n\t\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\t\tif (this.parent.children[i].id == this.id) {\n\t\t\t\t\t\tindex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.parent.children.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 完全克隆\r\n   * 不包括元素el\r\n   */\n\n\t}, {\n\t\tkey: 'fullClone',\n\t\tvalue: function fullClone(parent) {\n\t\t\tvar id = this.id;\n\t\t\tvar tag = this.tag;\n\t\t\tvar attrs = Object.assign({}, this.attrs);\n\t\t\tvar data = Object.assign({}, this.data);\n\t\t\tvar text = this.text;\n\t\t\tvar isText = this.isText;\n\t\t\tvar isComment = this.isComment;\n\t\t\tvar copyId = this.copyId;\n\t\t\tvar children = [];\n\t\t\tvar vnode = new VNode(id, tag, attrs, data, text, children, parent, isText, isComment);\n\t\t\tthis.children.forEach(function (child) {\n\t\t\t\tvar childVnode = child.fullClone(vnode);\n\t\t\t\tvnode.children.push(childVnode);\n\t\t\t});\n\t\t\treturn vnode;\n\t\t}\n\n\t\t/**\r\n   * 获取当前虚拟dom复制出来的最后一个节点\r\n   */\n\n\t}, {\n\t\tkey: 'getLastForVnode',\n\t\tvalue: function getLastForVnode() {\n\t\t\tvar _this3 = this;\n\n\t\t\tvar vnode = null;\n\t\t\tthis.parent.children.forEach(function (child) {\n\t\t\t\tif (child.copyId && child.copyId == _this3.id) {\n\t\t\t\t\tvnode = child;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn vnode;\n\t\t}\n\n\t\t/**\r\n   * 将指定虚拟dom插入当前虚拟dom后\r\n   * @param {Object} vnode\r\n   */\n\n\t}, {\n\t\tkey: 'insertAfter',\n\t\tvalue: function insertAfter(vnode) {\n\t\t\tvar index = this.getSequenceInParent();\n\t\t\tif (index > -1) {\n\t\t\t\tthis.parent.children.splice(index + 1, 0, vnode);\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 同级复制vnode，id会变\r\n   * @param {Object} index 序列值\r\n   * @param {Object} parent 父元素\r\n   * @param {Object} data 数据\r\n   */\n\n\t}, {\n\t\tkey: 'clone',\n\t\tvalue: function clone(index, parent, flag) {\n\t\t\t//id, tag, attrs, data, text, children, parent, isText, isComment\n\t\t\tvar id = flag ? 'vn_' + parent.id.substring(3) + '_' + index : this.id + '_copy_' + index;\n\t\t\tvar tag = this.tag;\n\t\t\tvar attrs = Object.assign({}, this.attrs);\n\t\t\tvar data = {};\n\t\t\tif (this.data['$attrs']) {\n\t\t\t\tvar _attrs = Object.assign({}, this.data['$attrs']);\n\t\t\t\tdata = Object.assign({}, this.data);\n\t\t\t\tdata['$attrs'] = _attrs;\n\t\t\t} else {\n\t\t\t\tdata = Object.assign({}, this.data);\n\t\t\t}\n\t\t\tvar text = this.text;\n\t\t\tvar isText = this.isText;\n\t\t\tvar isComment = this.isComment;\n\t\t\tvar children = [];\n\t\t\tvar vnode = new VNode(id, tag, attrs, data, text, children, parent, isText, isComment);\n\t\t\tvnode.copyId = this.id;\n\t\t\tthis.children.forEach(function (child, i) {\n\t\t\t\tvar childNode = child.clone(i, vnode, true);\n\t\t\t\tvnode.children.push(childNode);\n\t\t\t});\n\t\t\treturn vnode;\n\t\t}\n\n\t\t/**\r\n   * 根据该虚拟节点获取for循环根元素，即含有lk:for属性的虚拟节点\r\n   * 含有lk:for属性的节点为该节点或父节点或祖先节点\r\n   */\n\n\t}, {\n\t\tkey: 'getForLoopVnode',\n\t\tvalue: function getForLoopVnode() {\n\t\t\tif (this.attrs['lk:for']) {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tif (!this.parent) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (this.parent.attrs['lk:for']) {\n\t\t\t\treturn this.parent;\n\t\t\t}\n\t\t\treturn this.parent.getForLoopVnode();\n\t\t}\n\n\t\t/**\r\n   * 获取当前虚拟节点在parent中的序列位置\r\n   */\n\n\t}, {\n\t\tkey: 'getSequenceInParent',\n\t\tvalue: function getSequenceInParent() {\n\t\t\t//如果父节点不存在，返回-1\n\t\t\tif (!this.parent) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tvar length = this.parent.children.length;\n\t\t\tvar index = -1;\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tif (this.parent.children[i].id == this.id) {\n\t\t\t\t\tindex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn index;\n\t\t}\n\n\t\t/**\r\n   * 解析{{}}格式的内容\r\n   * @param {Object} template 字符串，形如{{user.name}}等\r\n   * @param {Object} obj 属性所在对象\r\n   * @param {Object} attr 绑定到data[$attrs]的属性名称\r\n   * @param {Object} reactive\r\n   */\n\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render(template, obj, attr, reactive) {\n\t\t\tvar _this4 = this;\n\n\t\t\tVNode.$reg.lastIndex = 0;\n\t\t\tif (!VNode.$reg.test(template)) {\n\t\t\t\treturn template;\n\t\t\t}\n\t\t\tVNode.$reg.lastIndex = 0;\n\t\t\tvar result = template.replace(VNode.$reg, function (matched, key) {\n\t\t\t\tvar data = VNode.parseExpression.call(obj, key);\n\t\t\t\tif (data == undefined && reactive && !VNode.isEqual(reactive, obj)) {\n\t\t\t\t\tdata = VNode.parseExpression.call(reactive, key);\n\t\t\t\t}\n\t\t\t\t_this4.data[key] = data;\n\t\t\t\tif (attr) {\n\t\t\t\t\tif (!_this4.data['$attrs']) {\n\t\t\t\t\t\t_this4.data['$attrs'] = {};\n\t\t\t\t\t}\n\t\t\t\t\t_this4.data['$attrs'][attr] = data;\n\t\t\t\t}\n\t\t\t\treturn VNode.dataToString(data);\n\t\t\t});\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\r\n   * 根据含有lk:else属性的元素获取含有lk:if属性的元素\r\n   */\n\n\t}, {\n\t\tkey: 'getIfVnode',\n\t\tvalue: function getIfVnode() {\n\t\t\tvar index = this.getSequenceInParent();\n\t\t\tif (index == 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tindex = index - 1;\n\t\t\tvar vnode = this.parent.children[index];\n\t\t\tif (vnode.attrs['lk:if']) {\n\t\t\t\treturn vnode;\n\t\t\t}\n\t\t\treturn vnode.getIfVnode();\n\t\t}\n\n\t\t/**\r\n   * 解析表达式\r\n   * @param {Object} expression 表达式\r\n   */\n\n\t}], [{\n\t\tkey: 'parseExpression',\n\t\tvalue: function parseExpression(expression) {\n\t\t\treturn eval(expression);\n\t\t}\n\n\t\t/**\r\n   * 标签类型为文本节点和注释节点时获取内容\r\n   * @param {Object} el\r\n   */\n\n\t}, {\n\t\tkey: 'getNodeText',\n\t\tvalue: function getNodeText(el) {\n\t\t\tif (el.nodeType === 3 || el.nodeType == 8) {\n\t\t\t\treturn el.nodeValue;\n\t\t\t} else {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 判断两个值是否完全相等，可判断对象\r\n   * @param {Object} a\r\n   * @param {Object} b\r\n   */\n\n\t}, {\n\t\tkey: 'isEqual',\n\t\tvalue: function isEqual(a, b) {\n\t\t\tif (!a || !b) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif ((typeof a === 'undefined' ? 'undefined' : _typeof(a)) !== (typeof b === 'undefined' ? 'undefined' : _typeof(b))) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif ((typeof a === 'undefined' ? 'undefined' : _typeof(a)) == 'object' && (typeof b === 'undefined' ? 'undefined' : _typeof(b)) == 'object') {\n\t\t\t\tvar aProps = Object.getOwnPropertyNames(a);\n\t\t\t\tvar bProps = Object.getOwnPropertyNames(b);\n\t\t\t\tif (aProps.length != bProps.length) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tvar length = aProps.length;\n\t\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\t\tvar propName = aProps[i];\n\t\t\t\t\tvar propA = a[propName];\n\t\t\t\t\tvar propB = b[propName];\n\t\t\t\t\tif ((typeof propA === 'undefined' ? 'undefined' : _typeof(propA)) == 'object') {\n\t\t\t\t\t\tif (this.isEqual(propA, propB)) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (propA !== propB) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn a === b;\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 实现任何值转字符串\r\n   * @param {Object} data\r\n   */\n\n\t}, {\n\t\tkey: 'dataToString',\n\t\tvalue: function dataToString(data) {\n\t\t\tvar dataStr = '';\n\t\t\ttry {\n\t\t\t\tif ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) == 'object') {\n\t\t\t\t\tdataStr = JSON.stringify(data);\n\t\t\t\t} else {\n\t\t\t\t\tdataStr = data.toString();\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tdataStr = data;\n\t\t\t}\n\t\t\treturn dataStr;\n\t\t}\n\t}]);\n\n\treturn VNode;\n}();\n\nVNode.$reg = /\\{\\{(.*?)\\}\\}/g;\n\nVNode.$methodReg = /(.+)\\(.*\\)/g;\n\nmodule.exports = VNode;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n")}])}));