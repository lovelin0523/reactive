!function(t,Q){"object"==typeof exports&&"object"==typeof module?module.exports=Q():"function"==typeof define&&define.amd?define([],Q):"object"==typeof exports?exports.Reactive=Q():t.Reactive=Q()}(window,(function(){return function(t){var Q={};function F(U){if(Q[U])return Q[U].exports;var B=Q[U]={i:U,l:!1,exports:{}};return t[U].call(B.exports,B,B.exports,F),B.l=!0,B.exports}return F.m=t,F.c=Q,F.d=function(t,Q,U){F.o(t,Q)||Object.defineProperty(t,Q,{enumerable:!0,get:U})},F.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},F.t=function(t,Q){if(1&Q&&(t=F(t)),8&Q)return t;if(4&Q&&"object"==typeof t&&t&&t.__esModule)return t;var U=Object.create(null);if(F.r(U),Object.defineProperty(U,"default",{enumerable:!0,value:t}),2&Q&&"string"!=typeof t)for(var B in t)F.d(U,B,function(Q){return t[Q]}.bind(null,B));return U},F.n=function(t){var Q=t&&t.__esModule?function(){return t.default}:function(){return t};return F.d(Q,"a",Q),Q},F.o=function(t,Q){return Object.prototype.hasOwnProperty.call(t,Q)},F.p="",F(F.s=0)}([function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar VNode = __webpack_require__(1);\n\n/**\r\n * 响应式MVVM对象\r\n */\n\nvar Reactive = function () {\n\tfunction Reactive() {\n\t\t_classCallCheck(this, Reactive);\n\n\t\tthis.$el = null;\n\t\tthis.$vnode = null;\n\t\tthis._vnode = null;\n\t\tthis.$data = null;\n\t\tthis.$methods = null;\n\t\tthis.$watch = null;\n\t\tthis.$beforeMount = null;\n\t\tthis.$mounted = null;\n\t\tthis.$beforeCreate = null;\n\t\tthis.$created = null;\n\t\tthis.$updated = null;\n\t\tthis.$beforeUpdate = null;\n\t}\n\n\t/**\r\n  * 实例方法：挂载到指定节点\r\n  * @param {Object} selector\r\n  */\n\n\n\t_createClass(Reactive, [{\n\t\tkey: 'mount',\n\t\tvalue: function mount(selector) {\n\t\t\tthis.$beforeMount.call(this);\n\t\t\t//获取挂载元素\n\t\t\tvar el = document.querySelector(selector);\n\t\t\tif (!el) {\n\t\t\t\tel = document.body;\n\t\t\t}\n\t\t\tthis.$el = el;\n\t\t\t//创建虚拟dom并渲染真实数据\n\t\t\tthis.$vnode = this._updateDoms(this._createVNode(el));\n\t\t\tthis._vnode = this.$vnode.clone();\n\t\t\t//虚拟dom的el插入页面\n\t\t\tthis.$el.parentNode.insertBefore(this._vnode.el, this.$el);\n\t\t\t//移除原来的\n\t\t\tthis.$el.parentNode.removeChild(this.$el);\n\t\t\t//更新$el\n\t\t\tthis.$el = this._vnode.el;\n\t\t\tthis.$mounted.call(this);\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\r\n   * 监听到数据更新对dom操作\r\n   */\n\n\t}, {\n\t\tkey: '_patch',\n\t\tvalue: function _patch() {\n\t\t\tthis.$vnode = this._updateDoms(this.$vnode);\n\t\t\tif (!VNode._equal(this.$vnode, this._vnode)) {\n\t\t\t\tthis._vnode = this._updateDoms(this._vnode);\n\t\t\t\tthis.$el.parentNode.insertBefore(this._vnode.el, this.$el);\n\t\t\t\tthis.$el.parentNode.removeChild(this.$el);\n\t\t\t\tthis.$el = this._vnode.el;\n\t\t\t} else {\n\t\t\t\tthis._patchVnode(this._vnode, this.$vnode);\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 比对同一级子元素vnode\r\n   * @param {Object} oldVnode\r\n   * @param {Object} vnode\r\n   */\n\n\t}, {\n\t\tkey: '_patchVnode',\n\t\tvalue: function _patchVnode(oldVnode, vnode) {\n\t\t\tfor (var i = 0; i < oldVnode.children.length; i++) {\n\t\t\t\tfor (var j = 0; j < vnode.children.length; j++) {\n\t\t\t\t\tif (!VNode._equal(vnode.children[j], oldVnode.children[i]) && vnode.children[j].id === oldVnode.children[i].id) {\n\t\t\t\t\t\tvar el = vnode.children[j].el.cloneNode(true);\n\t\t\t\t\t\toldVnode.el.insertBefore(el, oldVnode.children[i].el);\n\t\t\t\t\t\toldVnode.children[i].el.remove();\n\t\t\t\t\t\toldVnode.children[i].el = el;\n\t\t\t\t\t}\n\t\t\t\t\tthis._patchVnode(oldVnode.children[i], vnode.children[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 更新指定虚拟dom树及其子元素的el\r\n   * @param {Object} vnode\r\n   */\n\n\t}, {\n\t\tkey: '_updateDoms',\n\t\tvalue: function _updateDoms(vnode) {\n\t\t\t//根据虚拟dom递归创建真实节点以及其子节点（更新虚拟dom的el）\n\t\t\tVNode._createElement(vnode, this);\n\t\t\t//将虚拟dom的el填充到父元素的el中\n\t\t\tvar f = function f(item) {\n\t\t\t\titem.children.forEach(function (child) {\n\t\t\t\t\titem.el.appendChild(child.el);\n\t\t\t\t\tf(child);\n\t\t\t\t});\n\t\t\t};\n\t\t\tf(vnode);\n\t\t\treturn vnode;\n\t\t}\n\n\t\t/**\r\n   * 创建虚拟dom\r\n   * @param {Object} $el\r\n   * @param {Object} index\r\n   * @param {Object} parent\r\n   */\n\n\t}, {\n\t\tkey: '_createVNode',\n\t\tvalue: function _createVNode($el, index, parent, root) {\n\t\t\tvar children = [];\n\t\t\tvar text = VNode._getNodeText($el);\n\t\t\tvar nodeType = $el.nodeType;\n\t\t\tvar data = {};\n\t\t\tvar tag = $el.nodeName;\n\t\t\tvar attrs = {};\n\t\t\tif ($el.attributes) {\n\t\t\t\tvar length = $el.attributes.length;\n\t\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\t\tvar it = $el.attributes[i];\n\t\t\t\t\t//属性名\n\t\t\t\t\tvar localName = it.localName;\n\t\t\t\t\t//属性值\n\t\t\t\t\tvar value = it.value;\n\t\t\t\t\tattrs[localName] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tindex = index ? '' + index : '0';\n\t\t\tvar id = parent ? 'vn_' + parent.id.substring(3) + '_' + index : 'vn_' + index;\n\t\t\tvar vnode = new VNode(id, tag, $el, children, text, data, parent, root, nodeType, attrs);\n\t\t\tif (!root) {\n\t\t\t\troot = vnode;\n\t\t\t}\n\t\t\t//获取子节点\n\t\t\tvar childs = $el.childNodes;\n\t\t\t// 深度优先算法\n\t\t\tfor (var _i = 0; _i < childs.length; _i++) {\n\t\t\t\tvar childNode = this._createVNode(childs[_i], _i, vnode, root);\n\t\t\t\tvnode.children.push(childNode);\n\t\t\t}\n\t\t\treturn vnode;\n\t\t}\n\n\t\t/**\r\n   * 监听数据变更进行处理\r\n   * @param {Object} keys\r\n   * @param {Object} key\r\n   * @param {Object} value\r\n   */\n\n\t}, {\n\t\tkey: '_observer',\n\t\tvalue: function _observer(keys, key, value) {\n\t\t\tvar _this = this;\n\n\t\t\t//方法发生变化\n\t\t\tif (keys[0] == '$methods') {\n\t\t\t\t//更新挂载在实例下的方法\n\t\t\t\tObject.keys(this.$methods).forEach(function (key) {\n\t\t\t\t\t_this[key] = _this.$methods[key];\n\t\t\t\t});\n\t\t\t}\n\t\t\t//源数据发生变化\n\t\t\tif (keys[0] == '$data') {\n\t\t\t\t//更新挂载在实例下的数据\n\t\t\t\tObject.keys(this.$data).forEach(function (key) {\n\t\t\t\t\t_this[key] = _this.$data[key];\n\t\t\t\t});\n\t\t\t}\n\t\t\t//dom变更\n\t\t\tif (this.$vnode) {\n\t\t\t\tthis._patch();\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 创建一个Reactive的Proxy对象\r\n   * @param {Object} options\r\n   */\n\n\t}], [{\n\t\tkey: 'createApp',\n\t\tvalue: function createApp(options) {\n\t\t\t//初始化创建一个实例\n\t\t\tvar instance = new Reactive();\n\t\t\t//校验参数\n\t\t\tvar opt = Reactive._validator(options);\n\t\t\t//配置钩子函数\n\t\t\tinstance.$beforeCreate = opt.beforeCreate;\n\t\t\tinstance.$created = opt.created;\n\t\t\tinstance.$beforeUpdate = opt.beforeUpdate;\n\t\t\tinstance.$updated = opt.updated;\n\t\t\tinstance.$beforeMount = opt.beforeMount;\n\t\t\tinstance.$mounted = opt.mounted;\n\t\t\t//执行钩子函数beforeCreate\n\t\t\tinstance.$beforeCreate.call(instance);\n\t\t\t//配置watch监听参数\n\t\t\tinstance.$watch = opt.watch;\n\t\t\t//配置methods方法参数\n\t\t\tinstance.$methods = opt.methods;\n\t\t\t//配置data数据参数\n\t\t\tinstance.$data = opt.data;\n\t\t\t//将data直接挂载在实例上\n\t\t\tObject.keys(instance.$data).forEach(function (key) {\n\t\t\t\tinstance[key] = instance.$data[key];\n\t\t\t});\n\t\t\t//将methods直接挂载在实例上\n\t\t\tObject.keys(instance.$methods).forEach(function (key) {\n\t\t\t\tinstance[key] = instance.$methods[key];\n\t\t\t});\n\t\t\t//进行proxy代理\n\t\t\tinstance = Reactive._proxy(instance);\n\t\t\t//执行钩子函数created\n\t\t\tinstance.$created.call(instance);\n\t\t\t//返回实例\n\t\t\treturn instance;\n\t\t}\n\n\t\t/**\r\n   * 获取不需要监听的属性数组\r\n   */\n\n\t}, {\n\t\tkey: '_getUnObserveProperties',\n\t\tvalue: function _getUnObserveProperties() {\n\t\t\treturn ['$el', '$vnode', '_vnode', '$watch', 'mount', '_patch', '_patchVnode', '_updateDoms', '_createVNode', '_observer', '$beforeCreate', '$created', '$beforeMount', '$mounted', '$beforeUpdate', '$updated'];\n\t\t}\n\n\t\t/**\r\n   * 检验options参数\r\n   * @param {Object} options\r\n   */\n\n\t}, {\n\t\tkey: '_validator',\n\t\tvalue: function _validator(options) {\n\t\t\tvar _opt;\n\n\t\t\tvar opt = (_opt = {\n\t\t\t\tdata: {},\n\t\t\t\twatch: {},\n\t\t\t\tmethods: {},\n\t\t\t\tmounted: function mounted() {},\n\t\t\t\tbeforeCreate: function beforeCreate() {},\n\t\t\t\tcreated: function created() {},\n\t\t\t\tbeforeMount: function beforeMount() {}\n\t\t\t}, _defineProperty(_opt, 'mounted', function mounted() {}), _defineProperty(_opt, 'beforeUpdate', function beforeUpdate() {}), _defineProperty(_opt, 'updated', function updated() {}), _opt);\n\t\t\tif ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) == 'object' && options) {\n\t\t\t\tif (_typeof(options.data) == 'object' && options.data) {\n\t\t\t\t\topt.data = options.data;\n\t\t\t\t}\n\t\t\t\tif (_typeof(options.watch) == 'object' && options.watch) {\n\t\t\t\t\topt.watch = options.watch;\n\t\t\t\t}\n\t\t\t\tif (_typeof(options.methods) == 'object' && options.methods) {\n\t\t\t\t\topt.methods = options.methods;\n\t\t\t\t}\n\t\t\t\tif (typeof options.beforeMount == 'function' && options.beforeMount) {\n\t\t\t\t\topt.beforeMount = options.beforeMount;\n\t\t\t\t}\n\t\t\t\tif (typeof options.mounted == 'function' && options.mounted) {\n\t\t\t\t\topt.mounted = options.mounted;\n\t\t\t\t}\n\t\t\t\tif (typeof options.beforeCreate == 'function' && options.beforeCreate) {\n\t\t\t\t\topt.beforeCreate = options.beforeCreate;\n\t\t\t\t}\n\t\t\t\tif (typeof options.created == 'function' && options.created) {\n\t\t\t\t\topt.created = options.created;\n\t\t\t\t}\n\t\t\t\tif (typeof options.beforeUpdate == 'function' && options.beforeUpdate) {\n\t\t\t\t\topt.beforeUpdate = options.beforeUpdate;\n\t\t\t\t}\n\t\t\t\tif (typeof options.updated == 'function' && options.updated) {\n\t\t\t\t\topt.updated = options.updated;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn opt;\n\t\t}\n\n\t\t/**\r\n   * proxy代理实例\r\n   * @param {Object} instance\r\n   */\n\n\t}, {\n\t\tkey: '_proxy',\n\t\tvalue: function _proxy(instance) {\n\t\t\tvar watcher = function watcher(parentKey) {\n\t\t\t\treturn {\n\t\t\t\t\tget: function get(target, key) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tvar watchKey = parentKey ? parentKey + '.' + key : key;\n\t\t\t\t\t\t\tif (Reactive._getUnObserveProperties().includes(key)) {\n\t\t\t\t\t\t\t\treturn Reflect.get(target, key);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn new Proxy(target[key], watcher(watchKey));\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\treturn Reflect.get(target, key);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tset: function set(target, key, value) {\n\t\t\t\t\t\tif (Reactive._getUnObserveProperties().includes(key)) {\n\t\t\t\t\t\t\tReflect.set(target, key, value);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar watchKey = parentKey ? parentKey + '.' + key : key;\n\t\t\t\t\t\tvar oldValue = Reflect.get(target, key);\n\t\t\t\t\t\tvar oldTarget = undefined;\n\t\t\t\t\t\t//当是数组或者对象变动时获取旧的对象或数组\n\t\t\t\t\t\tif (Array.isArray(target)) {\n\t\t\t\t\t\t\toldTarget = [].concat(_toConsumableArray(target));\n\t\t\t\t\t\t} else if ((typeof target === 'undefined' ? 'undefined' : _typeof(target)) == 'object' && target) {\n\t\t\t\t\t\t\toldTarget = Object.assign({}, target);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (oldValue === value) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//更新之前回调钩子函数\n\t\t\t\t\t\tinstance.$beforeUpdate.call(instance, key, oldValue, value, target instanceof Reactive ? undefined : target);\n\t\t\t\t\t\t//更新数据\n\t\t\t\t\t\tReflect.set(target, key, value);\n\t\t\t\t\t\t//watch键名解析\n\t\t\t\t\t\tvar keys = Reactive._parseWatchKey(watchKey);\n\t\t\t\t\t\t//监听\n\t\t\t\t\t\tinstance._observer(keys, key, value);\n\t\t\t\t\t\t//回调\n\t\t\t\t\t\tkeys.forEach(function (item, index) {\n\t\t\t\t\t\t\tif (_typeof(instance.$watch) == 'object' && instance.$watch[item] && typeof instance.$watch[item] == 'function') {\n\t\t\t\t\t\t\t\tif (index === keys.length - 1) {\n\t\t\t\t\t\t\t\t\t//对象属性监听\n\t\t\t\t\t\t\t\t\tinstance.$watch[item].call(instance, value, oldValue);\n\t\t\t\t\t\t\t\t} else if (index === keys.length - 2) {\n\t\t\t\t\t\t\t\t\t//对象监听\n\t\t\t\t\t\t\t\t\tinstance.$watch[item].call(instance, target, oldTarget);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t//对象祖先父级监听\n\t\t\t\t\t\t\t\t\tinstance.$watch[item].call(instance);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\t//更新完毕回调调用钩子函数\n\t\t\t\t\t\tinstance.$updated.call(instance, key, oldValue, value, target instanceof Reactive ? undefined : target);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t\treturn new Proxy(instance, watcher());\n\t\t}\n\n\t\t/**\r\n   * 解析$watch字段数据\r\n   * @param {Object} watchKey\r\n   */\n\n\t}, {\n\t\tkey: '_parseWatchKey',\n\t\tvalue: function _parseWatchKey(watchKey) {\n\t\t\tvar arr = watchKey.split('.');\n\t\t\tvar result = [];\n\t\t\tvar keyFirst = '';\n\t\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\t\tvar key = '';\n\t\t\t\tif (keyFirst) {\n\t\t\t\t\tkey = keyFirst + '.' + arr[i];\n\t\t\t\t} else {\n\t\t\t\t\tkey = keyFirst + arr[i];\n\t\t\t\t}\n\t\t\t\tkeyFirst = key;\n\t\t\t\tresult.push(key);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}]);\n\n\treturn Reactive;\n}();\n\nmodule.exports = Reactive;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 虚拟dom对象\r\n */\nvar VNode = function () {\n\tfunction VNode(id, tag, el, children, text, data, parent, root, nodeType, attrs) {\n\t\t_classCallCheck(this, VNode);\n\n\t\tthis.id = id; //节点唯一键\n\t\tthis.tag = tag; //标签类型，DIV，SPAN，INPUT，#text\n\t\tthis.el = el; //对应的真实节点\n\t\tthis.children = children; //当前节点下的子节点\n\t\tthis.text = text; //当前虚拟节点的文本\n\t\tthis.data = data; //reactive关联的数据\n\t\tthis.parent = parent; //父级节点\n\t\tthis.root = root; //祖先根节点\n\t\tthis.nodeType = nodeType; //节点类型\n\t\tthis.attrs = attrs; //存放属性对象数组\n\t\tthis.$reg = /\\{\\{(.*?)\\}\\}/g; //匹配规则\n\t}\n\n\t/**\r\n  * 标签类型为#TEXT时获取文本内容\r\n  * @param {Object} el\r\n  */\n\n\n\t_createClass(VNode, [{\n\t\tkey: 'getLoopVnode',\n\n\n\t\t/**\r\n   * 获取for循环根元素\r\n   */\n\t\tvalue: function getLoopVnode() {\n\t\t\tif (!this.parent) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this.parent.attrs['lk:for']) {\n\t\t\t\treturn this.parent;\n\t\t\t}\n\t\t\treturn this.parent.getLoopVnode();\n\t\t}\n\n\t\t/**\r\n   * 复制vnode，id会变\r\n   * @param {Object} index\r\n   */\n\n\t}, {\n\t\tkey: '_clone',\n\t\tvalue: function _clone(index, parent, data) {\n\t\t\tvar newData = Object.assign({}, this.data);\n\t\t\tif (data) {\n\t\t\t\tnewData = Object.assign(newData, data);\n\t\t\t}\n\t\t\tvar vnode = new VNode(this.id + '_copy_' + index, this.tag, this.el.cloneNode(true), [], this.text, newData, parent, this.root, this.nodeType, this.attrs);\n\t\t\tthis.children.forEach(function (child, index) {\n\t\t\t\tvar childNode = child._clone(index, vnode);\n\t\t\t\tvnode.children.push(childNode);\n\t\t\t});\n\t\t\treturn vnode;\n\t\t}\n\n\t\t/**\r\n   * 完全复制\r\n   */\n\n\t}, {\n\t\tkey: 'clone',\n\t\tvalue: function clone() {\n\t\t\tvar vnode = new VNode(this.id, this.tag, this.el.cloneNode(true), [], this.text, this.data, this.parent, this.root, this.nodeType, this.attrs);\n\t\t\tthis.children.forEach(function (child, index) {\n\t\t\t\tvar childNode = child.clone();\n\t\t\t\tvnode.children.push(childNode);\n\t\t\t});\n\t\t\treturn vnode;\n\t\t}\n\n\t\t/**\r\n   * 将节点插入指定节点后\r\n   * @param {Object} vnode\r\n   */\n\n\t}, {\n\t\tkey: '_insertAfter',\n\t\tvalue: function _insertAfter(vnode) {\n\t\t\tvar index = vnode._getIndex();\n\t\t\tvnode.parent.children.splice(index + 1, 0, this);\n\t\t}\n\n\t\t/**\r\n   * 获取vnode在parent中的序列位置\r\n   */\n\n\t}, {\n\t\tkey: '_getIndex',\n\t\tvalue: function _getIndex() {\n\t\t\tvar length = this.parent.children.length;\n\t\t\tvar index = -1;\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tif (this.parent.children[i].id == this.id) {\n\t\t\t\t\tindex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn index;\n\t\t}\n\n\t\t/**\r\n   * 解析{{}}内容，进行html字符串渲染\r\n   */\n\n\t}, {\n\t\tkey: '_render',\n\t\tvalue: function _render(template, reactive) {\n\t\t\tvar _this = this;\n\n\t\t\tthis.$reg.lastIndex = 0;\n\t\t\tif (!this.$reg.test(template)) {\n\t\t\t\treturn template;\n\t\t\t}\n\t\t\tthis.$reg.lastIndex = 0;\n\t\t\tvar result = template.replace(this.$reg, function (matched, key) {\n\t\t\t\tvar data = _this._parseKey(reactive, key);\n\t\t\t\t_this.data[key] = data;\n\t\t\t\treturn data;\n\t\t\t});\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\r\n   * 解析key\r\n   */\n\n\t}, {\n\t\tkey: '_parseKey',\n\t\tvalue: function _parseKey(reactive, key) {\n\t\t\tvar keys = key.split('.');\n\t\t\tvar result = '';\n\t\t\tvar temp = reactive;\n\t\t\tkeys.forEach(function (item) {\n\t\t\t\ttemp = temp[item];\n\t\t\t\tresult = temp;\n\t\t\t});\n\t\t\treturn result;\n\t\t}\n\t}], [{\n\t\tkey: '_getNodeText',\n\t\tvalue: function _getNodeText(el) {\n\t\t\tif (el.nodeType === 3) {\n\t\t\t\t// 标签类型为#TEXT时\n\t\t\t\treturn el.nodeValue;\n\t\t\t} else {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 同id虚拟节点比较是否相等\r\n   * @param {Object} newVNode\r\n   * @param {Object} oldVNode\r\n   */\n\n\t}, {\n\t\tkey: '_equal',\n\t\tvalue: function _equal(newVNode, oldVNode) {\n\t\t\tif (newVNode.tag !== oldVNode.tag) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (newVNode.text !== oldVNode.text) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (newVNode.children.length !== oldVNode.children.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (newVNode.attrs.length !== oldVNode.attrs.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (newVNode.nodeType !== oldVNode.nodeType) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar oldAttrs = Object.keys(oldVNode.attrs);\n\t\t\tfor (var i = 0; i < oldAttrs.length; i++) {\n\t\t\t\tif (oldVNode.attrs[oldAttrs[i]] !== newVNode.attrs[oldAttrs[i]]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar newAttrs = Object.keys(newVNode.attrs);\n\t\t\tfor (var i = 0; i < newAttrs.length; i++) {\n\t\t\t\tif (newVNode.attrs[newAttrs[i]] !== oldVNode.attrs[newAttrs[i]]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar oldData = Object.keys(oldVNode.data);\n\t\t\tfor (var i = 0; i < oldData.length; i++) {\n\t\t\t\tif (oldVNode.data[oldData[i]] !== newVNode.data[oldData[i]]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar newData = Object.keys(newVNode.data);\n\t\t\tfor (var i = 0; i < newData.length; i++) {\n\t\t\t\tif (newVNode.data[newData[i]] !== oldVNode.data[newData[i]]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\r\n   * 根据vnode创建真实节点\r\n   * @param {Object} instance\r\n   * @param {Object} reactive\r\n   */\n\n\t}, {\n\t\tkey: '_createElement',\n\t\tvalue: function _createElement(instance, reactive) {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar ele = null;\n\t\t\tvar text = '';\n\t\t\t//文本节点\n\t\t\tif (instance.nodeType === 3) {\n\t\t\t\tvar forNode = instance.getLoopVnode();\n\t\t\t\tif (forNode) {\n\t\t\t\t\tinstance.$reg.lastIndex = 0;\n\t\t\t\t\tif (instance.$reg.test(instance.text)) {\n\t\t\t\t\t\tvar item = forNode.attrs['for-item'] || 'item';\n\t\t\t\t\t\tvar index = forNode.attrs['for-index'] || 'index';\n\t\t\t\t\t\tinstance.$reg.lastIndex = 0;\n\t\t\t\t\t\ttext = instance.text.replace(instance.$reg, function (match, key) {\n\t\t\t\t\t\t\tif (key == item) {\n\t\t\t\t\t\t\t\treturn forNode.data[item];\n\t\t\t\t\t\t\t} else if (key == index) {\n\t\t\t\t\t\t\t\treturn forNode.data[index];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn instance._render(instance.text, reactive);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext = instance._render(instance.text, reactive);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttext = instance._render(instance.text, reactive);\n\t\t\t\t}\n\t\t\t\tele = document.createTextNode(text);\n\t\t\t} else {\n\t\t\t\t//元素节点\n\t\t\t\tele = document.createElement(instance.tag);\n\t\t\t\tvar attrs = Object.keys(instance.attrs);\n\t\t\t\tfor (var i = 0; i < attrs.length; i++) {\n\t\t\t\t\tvar attr = attrs[i];\n\t\t\t\t\tvar attrValue = instance._render(instance.attrs[attr], reactive);\n\t\t\t\t\t//表示特殊指令\n\t\t\t\t\tif (attr.startsWith('lk:')) {\n\t\t\t\t\t\tvar name = attr.substr(3);\n\t\t\t\t\t\tif (name === 'for') {\n\t\t\t\t\t\t\t//for循环\n\t\t\t\t\t\t\tif (attrValue !== 'lk:for') {\n\t\t\t\t\t\t\t\tvar list = reactive[attrValue];\n\t\t\t\t\t\t\t\tvar _item = instance.attrs['for-item'] || 'item';\n\t\t\t\t\t\t\t\tvar _index = instance.attrs['for-index'] || 'index';\n\t\t\t\t\t\t\t\tinstance.attrs['lk:for'] = 'lk:for';\n\t\t\t\t\t\t\t\tinstance.data[_item] = list[0];\n\t\t\t\t\t\t\t\tinstance.data[_index] = 0;\n\t\t\t\t\t\t\t\tvar arr = Object.keys(list);\n\t\t\t\t\t\t\t\tfor (var j = arr.length - 1; j > 0; j--) {\n\t\t\t\t\t\t\t\t\tvar data = {};\n\t\t\t\t\t\t\t\t\tdata[_item] = list[j];\n\t\t\t\t\t\t\t\t\tdata[_index] = j;\n\t\t\t\t\t\t\t\t\tvar copyInstance = instance._clone(j, instance.parent, data);\n\t\t\t\t\t\t\t\t\tcopyInstance._insertAfter(instance);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tVNode._createElement(instance.parent, reactive);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (attr.startsWith('@')) {\n\t\t\t\t\t\t//事件\n\t\t\t\t\t\tvar eventName = attr.substr(1);\n\t\t\t\t\t\tele.addEventListener(eventName, function (e) {\n\t\t\t\t\t\t\tvar f = reactive[attrValue];\n\t\t\t\t\t\t\tf.call(reactive, e);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (attr == 'for-item' || attr == 'for-index') {} else {\n\t\t\t\t\t\tele.setAttribute(attr, attrValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tinstance.el = ele;\n\t\t\tinstance.children.forEach(function (child) {\n\t\t\t\t_this2._createElement(child, reactive);\n\t\t\t});\n\t\t}\n\t}]);\n\n\treturn VNode;\n}();\n\nmodule.exports = VNode;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n")}])}));